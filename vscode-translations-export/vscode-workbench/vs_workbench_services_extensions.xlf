<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/services/extensions/browser/extensionUrlHandler" source-language="en" datatype="plaintext"><body>
    <trans-unit id="confirmUrl">
      <source xml:lang="en">Allow '{0}' extension to open this URI?</source>
    </trans-unit>
    <trans-unit id="extensions">
      <source xml:lang="en">Extensions</source>
    </trans-unit>
    <trans-unit id="installDetail">
      <source xml:lang="en">This extension wants to open a URI:</source>
    </trans-unit>
    <trans-unit id="manage">
      <source xml:lang="en">Manage Authorized Extension URIs...</source>
    </trans-unit>
    <trans-unit id="no">
      <source xml:lang="en">There are currently no authorized extension URIs.</source>
    </trans-unit>
    <trans-unit id="open">
      <source xml:lang="en">&amp;&amp;Open</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="openUri">
      <source xml:lang="en">Open URI</source>
    </trans-unit>
    <trans-unit id="reloadAndHandle">
      <source xml:lang="en">Extension '{0}' is not loaded. Would you like to reload the window to load the extension and open the URL?</source>
    </trans-unit>
    <trans-unit id="reloadAndOpen">
      <source xml:lang="en">&amp;&amp;Reload Window and Open</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="rememberConfirmUrl">
      <source xml:lang="en">Do not ask me again for this extension</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/services/extensions/common/abstractExtensionService" source-language="en" datatype="plaintext"><body>
    <trans-unit id="activation">
      <source xml:lang="en">Activation Events</source>
    </trans-unit>
    <trans-unit id="disconnectRemote">
      <source xml:lang="en">Disconnect Remote Agent</source>
    </trans-unit>
    <trans-unit id="extensionService.autoRestart">
      <source xml:lang="en">The remote extension host terminated unexpectedly. Restarting...</source>
    </trans-unit>
    <trans-unit id="extensionService.crash">
      <source xml:lang="en">Remote Extension host terminated unexpectedly 3 times within the last 5 minutes.</source>
    </trans-unit>
    <trans-unit id="extensionStopVetoError">
      <source xml:lang="en">{0} (Error: {1})</source>
    </trans-unit>
    <trans-unit id="extensionStopVetoMessage">
      <source xml:lang="en">Please confirm restart of extensions.</source>
    </trans-unit>
    <trans-unit id="extensionTestError">
      <source xml:lang="en">No extension host found that can launch the test runner at {0}.</source>
    </trans-unit>
    <trans-unit id="looping">
      <source xml:lang="en">The following extensions contain dependency loops and have been disabled: {0}</source>
    </trans-unit>
    <trans-unit id="proceedAnyways">
      <source xml:lang="en">Restart Anyway</source>
    </trans-unit>
    <trans-unit id="restart">
      <source xml:lang="en">Restart Remote Extension Host</source>
    </trans-unit>
    <trans-unit id="stopExtensionHosts">
      <source xml:lang="en">Stopping Extension Hosts</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/services/extensions/common/extensionHostManager" source-language="en" datatype="plaintext"><body>
    <trans-unit id="measureExtHostLatency">
      <source xml:lang="en">Measure Extension Host Latency</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/services/extensions/common/extensionsProposedApi" source-language="en" datatype="plaintext"><body>
    <trans-unit id="enabledProposedAPIs">
      <source xml:lang="en">API Proposals</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/services/extensions/common/extensionsRegistry" source-language="en" datatype="plaintext"><body>
    <trans-unit id="extensionKind">
      <source xml:lang="en">Define the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions run on the remote.</source>
    </trans-unit>
    <trans-unit id="extensionKind.empty">
      <source xml:lang="en">Define an extension which cannot run in a remote context, neither on the local, nor on the remote machine.</source>
    </trans-unit>
    <trans-unit id="extensionKind.ui">
      <source xml:lang="en">Define an extension which can run only on the local machine when connected to remote window.</source>
    </trans-unit>
    <trans-unit id="extensionKind.ui-workspace">
      <source xml:lang="en">Define an extension which can run on either side, with a preference towards running on the local machine.</source>
    </trans-unit>
    <trans-unit id="extensionKind.workspace">
      <source xml:lang="en">Define an extension which can run only on the remote machine when connected remote window.</source>
    </trans-unit>
    <trans-unit id="extensionKind.workspace-ui">
      <source xml:lang="en">Define an extension which can run on either side, with a preference towards running on the remote machine.</source>
    </trans-unit>
    <trans-unit id="product.extensionEnabledApiProposals">
      <source xml:lang="en">API proposals that the respective extensions can freely use.</source>
    </trans-unit>
    <trans-unit id="ui">
      <source xml:lang="en">UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents">
      <source xml:lang="en">Activation events for the VS Code extension.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onAuthenticationRequest">
      <source xml:lang="en">An activation event emitted whenever sessions are requested from the specified authentication provider.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onChatParticipant">
      <source xml:lang="en">An activation event emitted when the specified chat participant is invoked.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onCommand">
      <source xml:lang="en">An activation event emitted whenever the specified command gets invoked.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onCustomEditor">
      <source xml:lang="en">An activation event emitted whenever the specified custom editor becomes visible.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onDebug">
      <source xml:lang="en">An activation event emitted whenever a user is about to start debugging or about to setup debug configurations.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onDebugAdapterProtocolTracker">
      <source xml:lang="en">An activation event emitted whenever a debug session with the specific type is about to be launched and a debug protocol tracker might be needed.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onDebugDynamicConfigurations">
      <source xml:lang="en">An activation event emitted whenever a list of all debug configurations needs to be created (and all provideDebugConfigurations methods for the "dynamic" scope need to be called).</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onDebugInitialConfigurations">
      <source xml:lang="en">An activation event emitted whenever a "launch.json" needs to be created (and all provideDebugConfigurations methods need to be called).</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onDebugResolve">
      <source xml:lang="en">An activation event emitted whenever a debug session with the specific type is about to be launched (and a corresponding resolveDebugConfiguration method needs to be called).</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onEditSession">
      <source xml:lang="en">An activation event emitted whenever an edit session is accessed with the given scheme.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onFileSystem">
      <source xml:lang="en">An activation event emitted whenever a file or folder is accessed with the given scheme.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onIssueReporterOpened">
      <source xml:lang="en">An activation event emitted when the issue reporter is opened.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onLanguage">
      <source xml:lang="en">An activation event emitted whenever a file that resolves to the specified language gets opened.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onLanguageModelTool">
      <source xml:lang="en">An activation event emitted when the specified language model tool is invoked.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onMcpCollection">
      <source xml:lang="en">An activation event emitted whenver a tool from the MCP server is requested.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onNotebook">
      <source xml:lang="en">An activation event emitted whenever the specified notebook document is opened.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onOpenExternalUri">
      <source xml:lang="en">An activation event emitted whenever a external uri (such as an http or https link) is being opened.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onRenderer">
      <source xml:lang="en">An activation event emitted whenever a notebook output renderer is used.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onSearch">
      <source xml:lang="en">An activation event emitted whenever a search is started in the folder with the given scheme.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onStartupFinished">
      <source xml:lang="en">An activation event emitted after the start-up finished (after all `*` activated extensions have finished activating).</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onTaskType">
      <source xml:lang="en">An activation event emitted whenever tasks of a certain type need to be listed or resolved.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onTerminalCompletionsRequested">
      <source xml:lang="en">An activation event emitted when terminal completions are requested.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onTerminalProfile">
      <source xml:lang="en">An activation event emitted when a specific terminal profile is launched.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onTerminalQuickFixRequest">
      <source xml:lang="en">An activation event emitted when a command matches the selector associated with this ID</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onUri">
      <source xml:lang="en">An activation event emitted whenever a system-wide Uri directed towards this extension is open.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onView">
      <source xml:lang="en">An activation event emitted whenever the specified view is expanded.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onWalkthrough">
      <source xml:lang="en">An activation event emitted when a specified walkthrough is opened.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.onWebviewPanel">
      <source xml:lang="en">An activation event emmited when a webview is loaded of a certain viewType</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.star">
      <source xml:lang="en">An activation event emitted on VS Code startup. To ensure a great end user experience, please use this activation event in your extension only when no other activation events combination works in your use-case.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.activationEvents.workspaceContains">
      <source xml:lang="en">An activation event emitted whenever a folder is opened that contains at least a file matching the specified glob pattern.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.api">
      <source xml:lang="en">Describe the API provided by this extension. For more details visit: https://code.visualstudio.com/api/advanced-topics/remote-extensions#handling-dependencies-with-remote-extensions</source>
    </trans-unit>
    <trans-unit id="vscode.extension.api.none">
      <source xml:lang="en">Give up entirely the ability to export any APIs. This allows other extensions that depend on this extension to run in a separate extension host process or in a remote machine.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.badges">
      <source xml:lang="en">Array of badges to display in the sidebar of the Marketplace's extension page.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.badges.description">
      <source xml:lang="en">Badge description.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.badges.href">
      <source xml:lang="en">Badge link.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.badges.url">
      <source xml:lang="en">Badge image URL.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities">
      <source xml:lang="en">Declare the set of supported capabilities by the extension.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.untrustedWorkspaces">
      <source xml:lang="en">Declares how the extension should be handled in untrusted workspaces.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.untrustedWorkspaces.description">
      <source xml:lang="en">A description of how workspace trust affects the extensions behavior and why it is needed. This only applies when `supported` is not `true`.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.untrustedWorkspaces.restrictedConfigurations">
      <source xml:lang="en">A list of configuration keys contributed by the extension that should not use workspace values in untrusted workspaces.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.untrustedWorkspaces.supported">
      <source xml:lang="en">Declares the level of support for untrusted workspaces by the extension.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.untrustedWorkspaces.supported.false">
      <source xml:lang="en">The extension will not be enabled in untrusted workspaces.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.untrustedWorkspaces.supported.limited">
      <source xml:lang="en">The extension will be enabled in untrusted workspaces with some functionality disabled.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.untrustedWorkspaces.supported.true">
      <source xml:lang="en">The extension will be enabled in untrusted workspaces with all functionality enabled.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.virtualWorkspaces">
      <source xml:lang="en">Declares whether the extension should be enabled in virtual workspaces. A virtual workspace is a workspace which is not backed by any on-disk resources. When false, this extension will be automatically disabled in virtual workspaces. Default is true.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.virtualWorkspaces.description">
      <source xml:lang="en">A description of how virtual workspaces affects the extensions behavior and why it is needed. This only applies when `supported` is not `true`.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.virtualWorkspaces.supported">
      <source xml:lang="en">Declares the level of support for virtual workspaces by the extension.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.virtualWorkspaces.supported.false">
      <source xml:lang="en">The extension will not be enabled in virtual workspaces.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.virtualWorkspaces.supported.limited">
      <source xml:lang="en">The extension will be enabled in virtual workspaces with some functionality disabled.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.capabilities.virtualWorkspaces.supported.true">
      <source xml:lang="en">The extension will be enabled in virtual workspaces with all functionality enabled.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.categories">
      <source xml:lang="en">The categories used by the VS Code gallery to categorize the extension.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.category.languages.deprecated">
      <source xml:lang="en">Use 'Programming  Languages' instead</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes">
      <source xml:lang="en">All contributions of the VS Code extension represented by this package.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.extensionPack">
      <source xml:lang="en">A set of extensions that can be installed together. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.sponsor">
      <source xml:lang="en">Specify the location from where users can sponsor your extension.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.sponsor.url">
      <source xml:lang="en">URL from where users can sponsor your extension. It must be a valid URL with a HTTP or HTTPS protocol. Example value: https://github.com/sponsors/nvaccess</source>
    </trans-unit>
    <trans-unit id="vscode.extension.displayName">
      <source xml:lang="en">The display name for the extension used in the VS Code gallery.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.enableProposedApi.deprecated">
      <source xml:lang="en">Use `enabledApiProposals` instead.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.enabledApiProposals">
      <source xml:lang="en">Enable API proposals to try them out. Only valid **during development**. Extensions **cannot be published** with this property. For more details visit: https://code.visualstudio.com/api/advanced-topics/using-proposed-api</source>
    </trans-unit>
    <trans-unit id="vscode.extension.engines">
      <source xml:lang="en">Engine compatibility.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.engines.vscode">
      <source xml:lang="en">For VS Code extensions, specifies the VS Code version that the extension is compatible with. Cannot be *. For example: ^0.10.5 indicates compatibility with a minimum VS Code version of 0.10.5.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.extensionDependencies">
      <source xml:lang="en">Dependencies to other extensions. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.galleryBanner">
      <source xml:lang="en">Banner used in the VS Code marketplace.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.galleryBanner.color">
      <source xml:lang="en">The banner color on the VS Code marketplace page header.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.galleryBanner.theme">
      <source xml:lang="en">The color theme for the font used in the banner.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.icon">
      <source xml:lang="en">The path to a 128x128 pixel icon.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.l10n">
      <source xml:lang="en">The relative path to a folder containing localization (bundle.l10n.*.json) files. Must be specified if you are using the vscode.l10n API.</source>
      <note>{Locked="bundle.l10n._locale_.json"}
{Locked="vscode.l10n API"}</note>
    </trans-unit>
    <trans-unit id="vscode.extension.markdown">
      <source xml:lang="en">Controls the Markdown rendering engine used in the Marketplace. Either github (default) or standard.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.preview">
      <source xml:lang="en">Sets the extension to be flagged as a Preview in the Marketplace.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.pricing">
      <source xml:lang="en">The pricing information for the extension. Can be Free (default) or Trial. For more details visit: https://code.visualstudio.com/api/working-with-extensions/publishing-extension#extension-pricing-label</source>
    </trans-unit>
    <trans-unit id="vscode.extension.publisher">
      <source xml:lang="en">The publisher of the VS Code extension.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.qna">
      <source xml:lang="en">Controls the Q&amp;A link in the Marketplace. Set to marketplace to enable the default Marketplace Q &amp; A site. Set to a string to provide the URL of a custom Q &amp; A site. Set to false to disable Q &amp; A altogether.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.scripts.prepublish">
      <source xml:lang="en">Script executed before the package is published as a VS Code extension.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.scripts.uninstall">
      <source xml:lang="en">Uninstall hook for VS Code extension. Script that gets executed when the extension is completely uninstalled from VS Code which is when VS Code is restarted (shutdown and start) after the extension is uninstalled. Only Node scripts are supported.</source>
    </trans-unit>
    <trans-unit id="workspace">
      <source xml:lang="en">Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/services/extensions/common/extensionsUtil" source-language="en" datatype="plaintext"><body>
    <trans-unit id="extensionUnderDevelopment">
      <source xml:lang="en">Loading development extension at {0}</source>
    </trans-unit>
    <trans-unit id="overwritingExtension">
      <source xml:lang="en">Overwriting extension {0} with {1}.</source>
    </trans-unit>
    <trans-unit id="overwritingWithWorkspaceExtension">
      <source xml:lang="en">Overwriting {0} with Workspace Extension {1}.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/services/extensions/electron-sandbox/cachedExtensionScanner" source-language="en" datatype="plaintext"><body>
    <trans-unit id="extensionCache.invalid">
      <source xml:lang="en">Extensions have been modified on disk. Please reload the window.</source>
    </trans-unit>
    <trans-unit id="reloadWindow">
      <source xml:lang="en">Reload Window</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/services/extensions/electron-sandbox/localProcessExtensionHost" source-language="en" datatype="plaintext"><body>
    <trans-unit id="extensionHost.startupFail">
      <source xml:lang="en">Extension host did not start in 10 seconds, that might be a problem.</source>
    </trans-unit>
    <trans-unit id="extensionHost.startupFailDebug">
      <source xml:lang="en">Extension host did not start in 10 seconds, it might be stopped on the first line and needs a debugger to continue.</source>
    </trans-unit>
    <trans-unit id="join.extensionDevelopment">
      <source xml:lang="en">Terminating extension debug session</source>
    </trans-unit>
    <trans-unit id="reloadWindow">
      <source xml:lang="en">Reload Window</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/services/extensions/electron-sandbox/nativeExtensionService" source-language="en" datatype="plaintext"><body>
    <trans-unit id="devTools">
      <source xml:lang="en">Open Developer Tools</source>
    </trans-unit>
    <trans-unit id="enable">
      <source xml:lang="en">Enable and Reload</source>
    </trans-unit>
    <trans-unit id="enableResolver">
      <source xml:lang="en">Extension '{0}' is required to open the remote window.
OK to enable?</source>
    </trans-unit>
    <trans-unit id="extensionService.autoRestart">
      <source xml:lang="en">The extension host terminated unexpectedly. Restarting...</source>
    </trans-unit>
    <trans-unit id="extensionService.crash">
      <source xml:lang="en">Extension host terminated unexpectedly 3 times within the last 5 minutes.</source>
    </trans-unit>
    <trans-unit id="extensionService.versionMismatchCrash">
      <source xml:lang="en">Extension host cannot start: version mismatch.</source>
    </trans-unit>
    <trans-unit id="getEnvironmentFailure">
      <source xml:lang="en">Could not fetch remote environment</source>
    </trans-unit>
    <trans-unit id="install">
      <source xml:lang="en">Install and Reload</source>
    </trans-unit>
    <trans-unit id="installResolver">
      <source xml:lang="en">Extension '{0}' is required to open the remote window.
Do you want to install the extension?</source>
    </trans-unit>
    <trans-unit id="learnMore">
      <source xml:lang="en">Learn More</source>
    </trans-unit>
    <trans-unit id="relaunch">
      <source xml:lang="en">Relaunch VS Code</source>
    </trans-unit>
    <trans-unit id="resolverExtensionNotFound">
      <source xml:lang="en">`{0}` not found on marketplace</source>
    </trans-unit>
    <trans-unit id="restart">
      <source xml:lang="en">Restart Extension Host</source>
    </trans-unit>
    <trans-unit id="restartExtensionHost">
      <source xml:lang="en">Restart Extension Host</source>
    </trans-unit>
    <trans-unit id="restartExtensionHost.reason">
      <source xml:lang="en">An explicit request</source>
    </trans-unit>
    <trans-unit id="startBisect">
      <source xml:lang="en">Start Extension Bisect</source>
    </trans-unit>
</body></file>
</xliff>