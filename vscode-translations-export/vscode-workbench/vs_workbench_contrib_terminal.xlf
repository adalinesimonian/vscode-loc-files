<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/contrib/terminal/browser/baseTerminalBackend" source-language="en" datatype="plaintext"><body>
    <trans-unit id="nonResponsivePtyHost">
      <source xml:lang="en">The connection to the terminal's pty host process is unresponsive, terminals may stop working. Click to manually restart the pty host.</source>
    </trans-unit>
    <trans-unit id="ptyHostStatus">
      <source xml:lang="en">Pty Host Status</source>
    </trans-unit>
    <trans-unit id="ptyHostStatus.ariaLabel">
      <source xml:lang="en">Pty Host is unresponsive</source>
    </trans-unit>
    <trans-unit id="ptyHostStatus.short">
      <source xml:lang="en">Pty Host</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/environmentVariableInfo" source-language="en" datatype="plaintext"><body>
    <trans-unit id="ScopedEnvironmentContributionInfo">
      <source xml:lang="en">workspace</source>
    </trans-unit>
    <trans-unit id="extensionEnvironmentContributionInfoActive">
      <source xml:lang="en">The following extensions have contributed to this terminal's environment:</source>
    </trans-unit>
    <trans-unit id="extensionEnvironmentContributionInfoStale">
      <source xml:lang="en">The following extensions want to relaunch the terminal to contribute to its environment:</source>
    </trans-unit>
    <trans-unit id="relaunchTerminalLabel">
      <source xml:lang="en">Relaunch Terminal</source>
    </trans-unit>
    <trans-unit id="showEnvironmentContributions">
      <source xml:lang="en">Show Environment Contributions</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminal.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="miToggleIntegratedTerminal">
      <source xml:lang="en">&amp;&amp;Terminal</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="terminal">
      <source xml:lang="en">Terminal</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalActions" source-language="en" datatype="plaintext"><body>
    <trans-unit id="emptyTerminalNameInfo">
      <source xml:lang="en">Providing no name will reset it to the default value</source>
    </trans-unit>
    <trans-unit id="newWithProfile.location">
      <source xml:lang="en">Where to create the terminal</source>
    </trans-unit>
    <trans-unit id="newWithProfile.location.editor">
      <source xml:lang="en">Create the terminal in the editor</source>
    </trans-unit>
    <trans-unit id="newWithProfile.location.view">
      <source xml:lang="en">Create the terminal in the terminal view</source>
    </trans-unit>
    <trans-unit id="noUnattachedTerminals">
      <source xml:lang="en">There are no unattached terminals to attach to</source>
    </trans-unit>
    <trans-unit id="sendSequence">
      <source xml:lang="en">The sequence of text to send to the terminal</source>
    </trans-unit>
    <trans-unit id="showTerminalTabs">
      <source xml:lang="en">Show Tabs</source>
    </trans-unit>
    <trans-unit id="terminalLaunchHelp">
      <source xml:lang="en">Open Help</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.attachToSession">
      <source xml:lang="en">Attach to Session</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.clear">
      <source xml:lang="en">Clear</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.clearSelection">
      <source xml:lang="en">Clear Selection</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.createTerminalEditor">
      <source xml:lang="en">Create New Terminal in Editor Area</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.createTerminalEditorSide">
      <source xml:lang="en">Create New Terminal in Editor Area to the Side</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.detachSession">
      <source xml:lang="en">Detach Session</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focus.tabsView">
      <source xml:lang="en">Focus Terminal Tabs View</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focusNext">
      <source xml:lang="en">Focus Next Terminal Group</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focusNextPane">
      <source xml:lang="en">Focus Next Terminal in Terminal Group</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focusPrevious">
      <source xml:lang="en">Focus Previous Terminal Group</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focusPreviousPane">
      <source xml:lang="en">Focus Previous Terminal in Terminal Group</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.join">
      <source xml:lang="en">Join Terminals...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.join.insufficientTerminals">
      <source xml:lang="en">Insufficient terminals for the join action</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.join.onlySplits">
      <source xml:lang="en">All terminals are joined already</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.joinInstance">
      <source xml:lang="en">Join Terminals</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.kill">
      <source xml:lang="en">Kill the Active Terminal Instance</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.killAll">
      <source xml:lang="en">Kill All Terminals</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.killEditor">
      <source xml:lang="en">Kill the Active Terminal in Editor Area</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.new">
      <source xml:lang="en">Create New Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newInActiveWorkspace">
      <source xml:lang="en">Create New Terminal (In Active Workspace)</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newWithCwd.cwd">
      <source xml:lang="en">The directory to start the terminal at</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newWithProfile">
      <source xml:lang="en">Create New Terminal (With Profile)</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newWithProfile.profileName">
      <source xml:lang="en">The name of the profile to create</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newWorkspacePlaceholder">
      <source xml:lang="en">Select current working directory for new terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.openSettings">
      <source xml:lang="en">Configure Terminal Settings</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.overriddenCwdDescription">
      <source xml:lang="en">(Overriden) {0}</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.relaunch">
      <source xml:lang="en">Relaunch Active Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.rename.prompt">
      <source xml:lang="en">Enter terminal name</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.renameWithArg.name">
      <source xml:lang="en">The new name for the terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.renameWithArg.noName">
      <source xml:lang="en">No name argument provided</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.resizePaneDown">
      <source xml:lang="en">Resize Terminal Down</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.resizePaneLeft">
      <source xml:lang="en">Resize Terminal Left</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.resizePaneRight">
      <source xml:lang="en">Resize Terminal Right</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.resizePaneUp">
      <source xml:lang="en">Resize Terminal Up</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.runActiveFile">
      <source xml:lang="en">Run Active File In Active Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.runActiveFile.noFile">
      <source xml:lang="en">Only files on disk can be run in the terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.runSelectedText">
      <source xml:lang="en">Run Selected Text In Active Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollDown">
      <source xml:lang="en">Scroll Down (Line)</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollDownPage">
      <source xml:lang="en">Scroll Down (Page)</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollToBottom">
      <source xml:lang="en">Scroll to Bottom</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollToTop">
      <source xml:lang="en">Scroll to Top</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollUp">
      <source xml:lang="en">Scroll Up (Line)</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollUpPage">
      <source xml:lang="en">Scroll Up (Page)</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectAll">
      <source xml:lang="en">Select All</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectDefaultShell">
      <source xml:lang="en">Select Default Profile</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectToNextCommand">
      <source xml:lang="en">Select To Next Command</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectToNextLine">
      <source xml:lang="en">Select To Next Line</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectToPreviousCommand">
      <source xml:lang="en">Select To Previous Command</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectToPreviousLine">
      <source xml:lang="en">Select To Previous Line</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.setFixedDimensions">
      <source xml:lang="en">Set Fixed Dimensions</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.splitInActiveWorkspace">
      <source xml:lang="en">Split Terminal (In Active Workspace)</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.switchTerminal">
      <source xml:lang="en">Switch Terminal</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalEditorInput" source-language="en" datatype="plaintext"><body>
    <trans-unit id="confirmDirtyTerminal.button">
      <source xml:lang="en">&amp;&amp;Terminate</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="confirmDirtyTerminal.detail">
      <source xml:lang="en">Closing will terminate the running processes in this terminal.</source>
    </trans-unit>
    <trans-unit id="confirmDirtyTerminal.message">
      <source xml:lang="en">Do you want to terminate running processes?</source>
    </trans-unit>
    <trans-unit id="confirmDirtyTerminals.detail">
      <source xml:lang="en">Closing will terminate the running processes in the terminals.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalIcons" source-language="en" datatype="plaintext"><body>
    <trans-unit id="configureTerminalProfileIcon">
      <source xml:lang="en">Icon for creating a new terminal profile.</source>
    </trans-unit>
    <trans-unit id="killTerminalIcon">
      <source xml:lang="en">Icon for killing a terminal instance.</source>
    </trans-unit>
    <trans-unit id="newTerminalIcon">
      <source xml:lang="en">Icon for creating a new terminal instance.</source>
    </trans-unit>
    <trans-unit id="renameTerminalIcon">
      <source xml:lang="en">Icon for rename in the terminal quick menu.</source>
    </trans-unit>
    <trans-unit id="terminalCommandHistoryFuzzySearch">
      <source xml:lang="en">Icon for toggling fuzzy search of command history.</source>
    </trans-unit>
    <trans-unit id="terminalCommandHistoryOpenFile">
      <source xml:lang="en">Icon for opening a shell history file.</source>
    </trans-unit>
    <trans-unit id="terminalCommandHistoryOutput">
      <source xml:lang="en">Icon for viewing output of a terminal command.</source>
    </trans-unit>
    <trans-unit id="terminalCommandHistoryRemove">
      <source xml:lang="en">Icon for removing a terminal command from command history.</source>
    </trans-unit>
    <trans-unit id="terminalDecorationError">
      <source xml:lang="en">Icon for a terminal decoration of a command that errored.</source>
    </trans-unit>
    <trans-unit id="terminalDecorationIncomplete">
      <source xml:lang="en">Icon for a terminal decoration of a command that was incomplete.</source>
    </trans-unit>
    <trans-unit id="terminalDecorationMark">
      <source xml:lang="en">Icon for a terminal decoration mark.</source>
    </trans-unit>
    <trans-unit id="terminalDecorationSuccess">
      <source xml:lang="en">Icon for a terminal decoration of a command that was successful.</source>
    </trans-unit>
    <trans-unit id="terminalViewIcon">
      <source xml:lang="en">View icon of the terminal view.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalInstance" source-language="en" datatype="plaintext"><body>
    <trans-unit id="bellStatus">
      <source xml:lang="en">Bell</source>
    </trans-unit>
    <trans-unit id="changeColor">
      <source xml:lang="en">Select a color for the terminal</source>
    </trans-unit>
    <trans-unit id="configureTerminalSettings">
      <source xml:lang="en">Configure Terminal Settings</source>
    </trans-unit>
    <trans-unit id="disconnectStatus">
      <source xml:lang="en">Lost connection to process</source>
    </trans-unit>
    <trans-unit id="keybindingHandling">
      <source xml:lang="en">Some keybindings don't go to the terminal by default and are handled by {0} instead.</source>
    </trans-unit>
    <trans-unit id="launchFailed.errorMessage">
      <source xml:lang="en">The terminal process failed to launch: {0}.</source>
    </trans-unit>
    <trans-unit id="launchFailed.exitCodeAndCommandLine">
      <source xml:lang="en">The terminal process "{0}" failed to launch (exit code: {1}).</source>
    </trans-unit>
    <trans-unit id="launchFailed.exitCodeOnly">
      <source xml:lang="en">The terminal process failed to launch (exit code: {0}).</source>
    </trans-unit>
    <trans-unit id="launchFailed.exitCodeOnlyShellIntegration">
      <source xml:lang="en">Disabling shell integration in user settings might help.</source>
    </trans-unit>
    <trans-unit id="setTerminalDimensionsColumn">
      <source xml:lang="en">Set Fixed Dimensions: Column</source>
    </trans-unit>
    <trans-unit id="setTerminalDimensionsRow">
      <source xml:lang="en">Set Fixed Dimensions: Row</source>
    </trans-unit>
    <trans-unit id="shellIntegration.learnMore">
      <source xml:lang="en">Learn more about shell integration</source>
    </trans-unit>
    <trans-unit id="shellIntegration.openSettings">
      <source xml:lang="en">Open user settings</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.a11yPromptLabel">
      <source xml:lang="en">Terminal input</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.useAccessibleBuffer">
      <source xml:lang="en">Use the accessible buffer {0} to manually review output</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.useAccessibleBufferNoKb">
      <source xml:lang="en">Use the Terminal: Focus Accessible Buffer command to manually review output</source>
    </trans-unit>
    <trans-unit id="terminal.requestTrust">
      <source xml:lang="en">Creating a terminal process requires executing code</source>
    </trans-unit>
    <trans-unit id="terminalHelpAriaLabel">
      <source xml:lang="en">Use {0} for terminal accessibility help</source>
    </trans-unit>
    <trans-unit id="terminalScreenReaderMode">
      <source xml:lang="en">Run the command: Toggle Screen Reader Accessibility Mode for an optimized screen reader experience</source>
    </trans-unit>
    <trans-unit id="terminalStaleTextBoxAriaLabel">
      <source xml:lang="en">Terminal {0} environment is stale, run the 'Show Environment Information' command for more information</source>
    </trans-unit>
    <trans-unit id="terminalTextBoxAriaLabel">
      <source xml:lang="en">Terminal {0}</source>
    </trans-unit>
    <trans-unit id="terminalTextBoxAriaLabelNumberAndTitle">
      <source xml:lang="en">Terminal {0}, {1}</source>
    </trans-unit>
    <trans-unit id="terminated.exitCodeAndCommandLine">
      <source xml:lang="en">The terminal process "{0}" terminated with exit code: {1}.</source>
    </trans-unit>
    <trans-unit id="terminated.exitCodeOnly">
      <source xml:lang="en">The terminal process terminated with exit code: {0}.</source>
    </trans-unit>
    <trans-unit id="workspaceNotTrustedCreateTerminal">
      <source xml:lang="en">Cannot launch a terminal process in an untrusted workspace</source>
    </trans-unit>
    <trans-unit id="workspaceNotTrustedCreateTerminalCwd">
      <source xml:lang="en">Cannot launch a terminal process in an untrusted workspace with cwd {0} and userHome {1}</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalMenus" source-language="en" datatype="plaintext"><body>
    <trans-unit id="defaultTerminalProfile">
      <source xml:lang="en">{0} (Default)</source>
    </trans-unit>
    <trans-unit id="launchProfile">
      <source xml:lang="en">Launch Profile...</source>
    </trans-unit>
    <trans-unit id="miNewTerminal">
      <source xml:lang="en">&amp;&amp;New Terminal</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="miRunActiveFile">
      <source xml:lang="en">Run &amp;&amp;Active File</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="miRunSelectedText">
      <source xml:lang="en">Run &amp;&amp;Selected Text</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="miSplitTerminal">
      <source xml:lang="en">&amp;&amp;Split Terminal</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="splitTerminal">
      <source xml:lang="en">Split Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.tasks.configureTaskRunner">
      <source xml:lang="en">Configure Tasks...</source>
    </trans-unit>
    <trans-unit id="workbench.action.tasks.runTask">
      <source xml:lang="en">Run Task...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.changeColor">
      <source xml:lang="en">Change Color...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.changeIcon">
      <source xml:lang="en">Change Icon...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.clear">
      <source xml:lang="en">Clear</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.clearLong">
      <source xml:lang="en">Clear Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.copySelection.short">
      <source xml:lang="en">Copy</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.copySelectionAsHtml">
      <source xml:lang="en">Copy as HTML</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.joinInstance">
      <source xml:lang="en">Join Terminals</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newWithProfile.short">
      <source xml:lang="en">New Terminal With Profile...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.openSettings">
      <source xml:lang="en">Configure Terminal Settings</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.paste.short">
      <source xml:lang="en">Paste</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.renameInstance">
      <source xml:lang="en">Rename...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.runActiveFile">
      <source xml:lang="en">Run Active File</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.runSelectedText">
      <source xml:lang="en">Run Selected Text</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectAll">
      <source xml:lang="en">Select All</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectDefaultProfile">
      <source xml:lang="en">Select Default Profile</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.switchTerminal">
      <source xml:lang="en">Switch Terminal</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalProcessManager" source-language="en" datatype="plaintext"><body>
    <trans-unit id="killportfailure">
      <source xml:lang="en">Could not kill process listening on port {0}, command exited with error {1}</source>
    </trans-unit>
    <trans-unit id="ptyHostRelaunch">
      <source xml:lang="en">Restarting the terminal because the connection to the shell process was lost...</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalProfileQuickpick" source-language="en" datatype="plaintext"><body>
    <trans-unit id="ICreateContributedTerminalProfileOptions">
      <source xml:lang="en">contributed</source>
    </trans-unit>
    <trans-unit id="cancel">
      <source xml:lang="en">Cancel</source>
    </trans-unit>
    <trans-unit id="createQuickLaunchProfile">
      <source xml:lang="en">Configure Terminal Profile</source>
    </trans-unit>
    <trans-unit id="enterTerminalProfileName">
      <source xml:lang="en">Enter terminal profile name</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.chooseDefaultProfile">
      <source xml:lang="en">Select your default terminal profile</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.selectProfileToCreate">
      <source xml:lang="en">Select the terminal profile to create</source>
    </trans-unit>
    <trans-unit id="terminalProfileAlreadyExists">
      <source xml:lang="en">A terminal profile already exists with that name</source>
    </trans-unit>
    <trans-unit id="terminalProfiles">
      <source xml:lang="en">profiles</source>
    </trans-unit>
    <trans-unit id="terminalProfiles.detected">
      <source xml:lang="en">detected</source>
    </trans-unit>
    <trans-unit id="unsafePathWarning">
      <source xml:lang="en">This terminal profile uses a potentially unsafe path that can be modified by another user: {0}. Are you sure you want to use it?</source>
    </trans-unit>
    <trans-unit id="yes">
      <source xml:lang="en">Yes</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalService" source-language="en" datatype="plaintext"><body>
    <trans-unit id="localTerminalRemote">
      <source xml:lang="en">This shell is running on your {0}local{1} machine, NOT on the connected remote machine</source>
    </trans-unit>
    <trans-unit id="localTerminalVirtualWorkspace">
      <source xml:lang="en">This shell is open to a {0}local{1} folder, NOT to the virtual folder</source>
    </trans-unit>
    <trans-unit id="terminalService.terminalCloseConfirmationPlural">
      <source xml:lang="en">Do you want to terminate the {0} active terminal sessions?</source>
    </trans-unit>
    <trans-unit id="terminalService.terminalCloseConfirmationSingular">
      <source xml:lang="en">Do you want to terminate the active terminal session?</source>
    </trans-unit>
    <trans-unit id="terminate">
      <source xml:lang="en">&amp;&amp;Terminate</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalTabbedView" source-language="en" datatype="plaintext"><body>
    <trans-unit id="hideTabs">
      <source xml:lang="en">Hide Tabs</source>
    </trans-unit>
    <trans-unit id="moveTabsLeft">
      <source xml:lang="en">Move Tabs Left</source>
    </trans-unit>
    <trans-unit id="moveTabsRight">
      <source xml:lang="en">Move Tabs Right</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalTabsList" source-language="en" datatype="plaintext"><body>
    <trans-unit id="label">
      <source xml:lang="en">Terminal</source>
    </trans-unit>
    <trans-unit id="splitTerminalAriaLabel">
      <source xml:lang="en">Terminal {0} {1}, split {2} of {3}</source>
      <note>The terminal's ID
The terminal's title
The terminal's split number
The terminal group's total split number</note>
    </trans-unit>
    <trans-unit id="terminal.tabs">
      <source xml:lang="en">Terminal tabs</source>
    </trans-unit>
    <trans-unit id="terminalAriaLabel">
      <source xml:lang="en">Terminal {0} {1}</source>
      <note>The terminal's ID
The terminal's title</note>
    </trans-unit>
    <trans-unit id="terminalInputAriaLabel">
      <source xml:lang="en">Type terminal name. Press Enter to confirm or Escape to cancel.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalTooltip" source-language="en" datatype="plaintext"><body>
    <trans-unit id="launchFailed.exitCodeOnlyShellIntegration">
      <source xml:lang="en">The terminal process failed to launch. Disabling shell integration with terminal.integrated.shellIntegration.enabled might help.</source>
    </trans-unit>
    <trans-unit id="shellIntegration.activationFailed">
      <source xml:lang="en">Shell integration failed to activate</source>
    </trans-unit>
    <trans-unit id="shellIntegration.enabled">
      <source xml:lang="en">Shell integration activated</source>
    </trans-unit>
    <trans-unit id="shellProcessTooltip.commandLine">
      <source xml:lang="en">Command line: {0}</source>
    </trans-unit>
    <trans-unit id="shellProcessTooltip.processId">
      <source xml:lang="en">Process ID ({0}): {1}</source>
      <note>The first arg is "PID" which shouldn't be translated</note>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/terminalView" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.monospaceOnly">
      <source xml:lang="en">The terminal only supports monospace fonts. Be sure to restart VS Code if this is a newly installed font.</source>
    </trans-unit>
    <trans-unit id="terminal.useMonospace">
      <source xml:lang="en">Use 'monospace'</source>
    </trans-unit>
    <trans-unit id="terminalConnectingLabel">
      <source xml:lang="en">Starting...</source>
    </trans-unit>
    <trans-unit id="terminals">
      <source xml:lang="en">Open Terminals.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/xterm/decorationAddon" source-language="en" datatype="plaintext"><body>
    <trans-unit id="gutter">
      <source xml:lang="en">Gutter command decorations</source>
    </trans-unit>
    <trans-unit id="no">
      <source xml:lang="en">No</source>
    </trans-unit>
    <trans-unit id="overviewRuler">
      <source xml:lang="en">Overview ruler command decorations</source>
    </trans-unit>
    <trans-unit id="rerun">
      <source xml:lang="en">Do you want to run the command: {0}</source>
    </trans-unit>
    <trans-unit id="terminal.copyCommand">
      <source xml:lang="en">Copy Command</source>
    </trans-unit>
    <trans-unit id="terminal.copyCommandAndOutput">
      <source xml:lang="en">Copy Command and Output</source>
    </trans-unit>
    <trans-unit id="terminal.copyOutput">
      <source xml:lang="en">Copy Output</source>
    </trans-unit>
    <trans-unit id="terminal.copyOutputAsHtml">
      <source xml:lang="en">Copy Output as HTML</source>
    </trans-unit>
    <trans-unit id="terminal.learnShellIntegration">
      <source xml:lang="en">Learn About Shell Integration</source>
    </trans-unit>
    <trans-unit id="terminal.rerunCommand">
      <source xml:lang="en">Rerun Command</source>
    </trans-unit>
    <trans-unit id="toggleVisibility">
      <source xml:lang="en">Toggle visibility</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.goToRecentDirectory">
      <source xml:lang="en">Go To Recent Directory</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.runRecentCommand">
      <source xml:lang="en">Run Recent Command</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.toggleVisibility">
      <source xml:lang="en">Toggle Visibility</source>
    </trans-unit>
    <trans-unit id="yes">
      <source xml:lang="en">Yes</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/xterm/decorationStyles" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminalPromptCommandFailed">
      <source xml:lang="en">Command executed {0} and failed</source>
    </trans-unit>
    <trans-unit id="terminalPromptCommandFailed.duration">
      <source xml:lang="en">Command executed {0}, took {1} and failed</source>
    </trans-unit>
    <trans-unit id="terminalPromptCommandFailedWithExitCode">
      <source xml:lang="en">Command executed {0} and failed (Exit Code {1})</source>
    </trans-unit>
    <trans-unit id="terminalPromptCommandFailedWithExitCode.duration">
      <source xml:lang="en">Command executed {0}, took {1} and failed (Exit Code {2})</source>
    </trans-unit>
    <trans-unit id="terminalPromptCommandSuccess">
      <source xml:lang="en">Command executed {0}</source>
    </trans-unit>
    <trans-unit id="terminalPromptCommandSuccess.duration">
      <source xml:lang="en">Command executed {0} and took {1}</source>
    </trans-unit>
    <trans-unit id="terminalPromptContextMenu">
      <source xml:lang="en">Show Command Actions</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.integrated.copySelection.noSelection">
      <source xml:lang="en">The terminal has no selection to copy</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/common/terminal" source-language="en" datatype="plaintext"><body>
    <trans-unit id="vscode.extension.contributes.terminal">
      <source xml:lang="en">Contributes terminal functionality.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminal.profiles">
      <source xml:lang="en">Defines additional terminal profiles that the user can create.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminal.profiles.id">
      <source xml:lang="en">The ID of the terminal profile provider.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminal.profiles.title">
      <source xml:lang="en">Title for this terminal profile.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminal.types.icon">
      <source xml:lang="en">A codicon, URI, or light and dark URIs to associate with this terminal type.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminal.types.icon.dark">
      <source xml:lang="en">Icon path when a dark theme is used</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminal.types.icon.light">
      <source xml:lang="en">Icon path when a light theme is used</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/common/terminalColorRegistry" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.ansiColor">
      <source xml:lang="en">'{0}' ANSI color in the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.background">
      <source xml:lang="en">The background color of the terminal, this allows coloring the terminal differently to the panel.</source>
    </trans-unit>
    <trans-unit id="terminal.border">
      <source xml:lang="en">The color of the border that separates split panes within the terminal. This defaults to panel.border.</source>
    </trans-unit>
    <trans-unit id="terminal.dragAndDropBackground">
      <source xml:lang="en">Background color when dragging on top of terminals. The color should have transparency so that the terminal contents can still shine through.</source>
    </trans-unit>
    <trans-unit id="terminal.findMatchBackground">
      <source xml:lang="en">Color of the current search match in the terminal. The color must not be opaque so as not to hide underlying terminal content.</source>
    </trans-unit>
    <trans-unit id="terminal.findMatchBorder">
      <source xml:lang="en">Border color of the current search match in the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.findMatchHighlightBackground">
      <source xml:lang="en">Color of the other search matches in the terminal. The color must not be opaque so as not to hide underlying terminal content.</source>
    </trans-unit>
    <trans-unit id="terminal.findMatchHighlightBorder">
      <source xml:lang="en">Border color of the other search matches in the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.foreground">
      <source xml:lang="en">The foreground color of the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.inactiveSelectionBackground">
      <source xml:lang="en">The selection background color of the terminal when it does not have focus.</source>
    </trans-unit>
    <trans-unit id="terminal.selectionBackground">
      <source xml:lang="en">The selection background color of the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.selectionForeground">
      <source xml:lang="en">The selection foreground color of the terminal. When this is null the selection foreground will be retained and have the minimum contrast ratio feature applied.</source>
    </trans-unit>
    <trans-unit id="terminal.tab.activeBorder">
      <source xml:lang="en">Border on the side of the terminal tab in the panel. This defaults to tab.activeBorder.</source>
    </trans-unit>
    <trans-unit id="terminalCommandDecoration.defaultBackground">
      <source xml:lang="en">The default terminal command decoration background color.</source>
    </trans-unit>
    <trans-unit id="terminalCommandDecoration.errorBackground">
      <source xml:lang="en">The terminal command decoration background color for error commands.</source>
    </trans-unit>
    <trans-unit id="terminalCommandDecoration.successBackground">
      <source xml:lang="en">The terminal command decoration background color for successful commands.</source>
    </trans-unit>
    <trans-unit id="terminalCursor.background">
      <source xml:lang="en">The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.</source>
    </trans-unit>
    <trans-unit id="terminalCursor.foreground">
      <source xml:lang="en">The foreground color of the terminal cursor.</source>
    </trans-unit>
    <trans-unit id="terminalInitialHintForeground">
      <source xml:lang="en">Foreground color of the terminal initial hint.</source>
    </trans-unit>
    <trans-unit id="terminalOverviewRuler.border">
      <source xml:lang="en">The overview ruler left-side border color.</source>
    </trans-unit>
    <trans-unit id="terminalOverviewRuler.cursorForeground">
      <source xml:lang="en">The overview ruler cursor color.</source>
    </trans-unit>
    <trans-unit id="terminalOverviewRuler.findMatchHighlightForeground">
      <source xml:lang="en">Overview ruler marker color for find matches in the terminal.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/common/terminalConfiguration" source-language="en" datatype="plaintext"><body>
    <trans-unit id="cwd">
      <source xml:lang="en">the terminal's current working directory</source>
    </trans-unit>
    <trans-unit id="cwdFolder">
      <source xml:lang="en">the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.</source>
    </trans-unit>
    <trans-unit id="enableFileLinks.notRemote">
      <source xml:lang="en">Enable only when not in a remote workspace.</source>
    </trans-unit>
    <trans-unit id="enableFileLinks.off">
      <source xml:lang="en">Always off.</source>
    </trans-unit>
    <trans-unit id="enableFileLinks.on">
      <source xml:lang="en">Always on.</source>
    </trans-unit>
    <trans-unit id="hideOnStartup.always">
      <source xml:lang="en">Always hide the terminal, even when there are persistent sessions restored.</source>
    </trans-unit>
    <trans-unit id="hideOnStartup.never">
      <source xml:lang="en">Never hide the terminal view on startup.</source>
    </trans-unit>
    <trans-unit id="hideOnStartup.whenEmpty">
      <source xml:lang="en">Only hide the terminal when there are no persistent sessions restored.</source>
    </trans-unit>
    <trans-unit id="local">
      <source xml:lang="en">indicates a local terminal in a remote workspace</source>
    </trans-unit>
    <trans-unit id="openDefaultSettingsJson">
      <source xml:lang="en">open the default settings JSON</source>
    </trans-unit>
    <trans-unit id="openDefaultSettingsJson.capitalized">
      <source xml:lang="en">Open Default Settings (JSON)</source>
    </trans-unit>
    <trans-unit id="process">
      <source xml:lang="en">the name of the terminal process</source>
    </trans-unit>
    <trans-unit id="progress">
      <source xml:lang="en">the progress state as reported by the `OSC 9;4` sequence</source>
    </trans-unit>
    <trans-unit id="separator">
      <source xml:lang="en">a conditional separator {0} that only shows when surrounded by variables with values or static text.</source>
    </trans-unit>
    <trans-unit id="sequence">
      <source xml:lang="en">the name provided to the terminal by the process</source>
    </trans-unit>
    <trans-unit id="shellCommand">
      <source xml:lang="en">the command being executed according to shell integration. This also requires high confidence in the detected command line which may not work in some prompt frameworks.</source>
    </trans-unit>
    <trans-unit id="shellPromptInput">
      <source xml:lang="en">the shell's full prompt input according to shell integration</source>
    </trans-unit>
    <trans-unit id="shellType">
      <source xml:lang="en">the detected shell type</source>
    </trans-unit>
    <trans-unit id="task">
      <source xml:lang="en">indicates this terminal is associated with a task</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.allowChords">
      <source xml:lang="en">Whether or not to allow chord keybindings in the terminal. Note that when this is true and the keystroke results in a chord it will bypass {0}, setting this to false is particularly useful when you want ctrl+k to go to your shell (not VS Code).</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.allowMnemonics">
      <source xml:lang="en">Whether to allow menubar mnemonics (for example Alt+F) to trigger the open of the menubar. Note that this will cause all alt keystrokes to skip the shell when true. This does nothing on macOS.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.allowedLinkSchemes">
      <source xml:lang="en">An array of strings containing the URI schemes that the terminal is allowed to open links for. By default, only a small subset of possible schemes are allowed for security reasons.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.altClickMovesCursor">
      <source xml:lang="en">If enabled, alt/option + click will reposition the prompt cursor to underneath the mouse when {0} is set to {1} (the default value). This may not work reliably depending on your shell.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.bellDuration">
      <source xml:lang="en">The number of milliseconds to show the bell within a terminal tab when triggered.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.commandsToSkipShell">
      <source xml:lang="en">A set of command IDs whose keybindings will not be sent to the shell but instead always be handled by VS Code. This allows keybindings that would normally be consumed by the shell to act instead the same as when the terminal is not focused, for example `Ctrl+P` to launch Quick Open.

&amp;nbsp;

Many commands are skipped by default. To override a default and pass that command's keybinding to the shell instead, add the command prefixed with the `-` character. For example add `-workbench.action.quickOpen` to allow `Ctrl+P` to reach the shell.

&amp;nbsp;

The following list of default skipped commands is truncated when viewed in Settings Editor. To see the full list, {1} and search for the first command from the list below.

&amp;nbsp;

Default Skipped Commands:

{0}</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnExit">
      <source xml:lang="en">Controls whether to confirm when the window closes if there are active terminal sessions. Background terminals like those launched by some extensions will not trigger the confirmation.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnExit.always">
      <source xml:lang="en">Always confirm if there are terminals.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnExit.hasChildProcesses">
      <source xml:lang="en">Confirm if there are any terminals that have child processes.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnExit.never">
      <source xml:lang="en">Never confirm.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnKill">
      <source xml:lang="en">Controls whether to confirm killing terminals when they have child processes. When set to editor, terminals in the editor area will be marked as changed when they have child processes. Note that child process detection may not work well for shells like Git Bash which don't run their processes as child processes of the shell. Background terminals like those launched by some extensions will not trigger the confirmation.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnKill.always">
      <source xml:lang="en">Confirm if the terminal is either in the editor or panel.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnKill.editor">
      <source xml:lang="en">Confirm if the terminal is in the editor.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnKill.never">
      <source xml:lang="en">Never confirm.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.confirmOnKill.panel">
      <source xml:lang="en">Confirm if the terminal is in the panel.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.copyOnSelection">
      <source xml:lang="en">Controls whether text selected in the terminal will be copied to the clipboard.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.cursorBlinking">
      <source xml:lang="en">Controls whether the terminal cursor blinks.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.cursorStyle">
      <source xml:lang="en">Controls the style of terminal cursor when the terminal is focused.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.cursorStyleInactive">
      <source xml:lang="en">Controls the style of terminal cursor when the terminal is not focused.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.cursorWidth">
      <source xml:lang="en">Controls the width of the cursor when {0} is set to {1}.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.customGlyphs">
      <source xml:lang="en">Whether to draw custom glyphs for block element and box drawing characters instead of using the font, which typically yields better rendering with continuous lines. Note that this doesn't work when {0} is disabled.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.cwd">
      <source xml:lang="en">An explicit start path where the terminal will be launched, this is used as the current working directory (cwd) for the shell process. This may be particularly useful in workspace settings if the root directory is not a convenient cwd.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.defaultLocation">
      <source xml:lang="en">Controls where newly created terminals will appear.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.defaultLocation.editor">
      <source xml:lang="en">Create terminals in the editor</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.defaultLocation.view">
      <source xml:lang="en">Create terminals in the terminal view</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.detectLocale">
      <source xml:lang="en">Controls whether to detect and set the `$LANG` environment variable to a UTF-8 compliant option since VS Code's terminal only supports UTF-8 encoded data coming from the shell.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.detectLocale.auto">
      <source xml:lang="en">Set the `$LANG` environment variable if the existing variable does not exist or it does not end in `'.UTF-8'`.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.detectLocale.off">
      <source xml:lang="en">Do not set the `$LANG` environment variable.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.detectLocale.on">
      <source xml:lang="en">Always set the `$LANG` environment variable.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.drawBoldTextInBrightColors">
      <source xml:lang="en">Controls whether bold text in the terminal will always use the "bright" ANSI color variant.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enableBell">
      <source xml:lang="en">This is now deprecated. Instead use the `terminal.integrated.enableVisualBell` and `accessibility.signals.terminalBell` settings.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enableFileLinks">
      <source xml:lang="en">Whether to enable file links in terminals. Links can be slow when working on a network drive in particular because each file link is verified against the file system. Changing this will take effect only in new terminals.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enableImages">
      <source xml:lang="en">Enables image support in the terminal, this will only work when {0} is enabled. Both sixel and iTerm's inline image protocol are supported on Linux and macOS. This will only work on Windows for versions of ConPTY &gt;= v2 which is shipped with Windows itself, see also {1}. Images will currently not be restored between window reloads/reconnects.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enableMultiLinePasteWarning">
      <source xml:lang="en">Controls whether to show a warning dialog when pasting multiple lines into the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enableMultiLinePasteWarning.always">
      <source xml:lang="en">Always show the warning if the text contains a new line.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enableMultiLinePasteWarning.auto">
      <source xml:lang="en">Enable the warning but do not show it when:

- Bracketed paste mode is enabled (the shell supports multi-line paste natively)
- The paste is handled by the shell's readline (in the case of pwsh)</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enableMultiLinePasteWarning.never">
      <source xml:lang="en">Never show the warning.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enablePersistentSessions">
      <source xml:lang="en">Persist terminal sessions/history for the workspace across window reloads.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.enableVisualBell">
      <source xml:lang="en">Controls whether the visual terminal bell is enabled. This shows up next to the terminal's name.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.env.linux">
      <source xml:lang="en">Object with environment variables that will be added to the VS Code process to be used by the terminal on Linux. Set to `null` to delete the environment variable.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.env.osx">
      <source xml:lang="en">Object with environment variables that will be added to the VS Code process to be used by the terminal on macOS. Set to `null` to delete the environment variable.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.env.windows">
      <source xml:lang="en">Object with environment variables that will be added to the VS Code process to be used by the terminal on Windows. Set to `null` to delete the environment variable.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.environmentChangesIndicator">
      <source xml:lang="en">Whether to display the environment changes indicator on each terminal which explains whether extensions have made, or want to make changes to the terminal's environment.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.environmentChangesIndicator.off">
      <source xml:lang="en">Disable the indicator.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.environmentChangesIndicator.on">
      <source xml:lang="en">Enable the indicator.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.environmentChangesIndicator.warnonly">
      <source xml:lang="en">Only show the warning indicator when a terminal's environment is 'stale', not the information indicator that shows a terminal has had its environment modified by an extension.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.environmentChangesRelaunch">
      <source xml:lang="en">Whether to relaunch terminals automatically if extensions want to contribute to their environment and have not been interacted with yet.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fastScrollSensitivity">
      <source xml:lang="en">Scrolling speed multiplier when pressing `Alt`.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.focusAfterRun">
      <source xml:lang="en">Controls whether the terminal, accessible buffer, or neither will be focused after `Terminal: Run Selected Text In Active Terminal` has been run.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.focusAfterRun.accessible-buffer">
      <source xml:lang="en">Always focus the accessible buffer.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.focusAfterRun.none">
      <source xml:lang="en">Do nothing.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.focusAfterRun.terminal">
      <source xml:lang="en">Always focus the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fontFamily">
      <source xml:lang="en">Controls the font family of the terminal. Defaults to {0}'s value.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fontLigatures.enabled">
      <source xml:lang="en">Controls whether font ligatures are enabled in the terminal. Ligatures will only work if the configured {0} supports them.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fontLigatures.fallbackLigatures">
      <source xml:lang="en">When {0} is enabled and the particular {1} cannot be parsed, this is the set of character sequences that will always be drawn together. This allows the use of a fixed set of ligatures even when the font isn't supported.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fontLigatures.featureSettings">
      <source xml:lang="en">Controls what font feature settings are used when ligatures are enabled, in the format of the `font-feature-settings` CSS property. Some examples which may be valid depending on the font:</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fontSize">
      <source xml:lang="en">Controls the font size in pixels of the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fontWeight">
      <source xml:lang="en">The font weight to use within the terminal for non-bold text. Accepts "normal" and "bold" keywords or numbers between 1 and 1000.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fontWeightBold">
      <source xml:lang="en">The font weight to use within the terminal for bold text. Accepts "normal" and "bold" keywords or numbers between 1 and 1000.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.fontWeightError">
      <source xml:lang="en">Only "normal" and "bold" keywords or numbers between 1 and 1000 are allowed.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.gpuAcceleration">
      <source xml:lang="en">Controls whether the terminal will leverage the GPU to do its rendering.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.gpuAcceleration.auto">
      <source xml:lang="en">Let VS Code detect which renderer will give the best experience.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.gpuAcceleration.off">
      <source xml:lang="en">Disable GPU acceleration within the terminal. The terminal will render much slower when GPU acceleration is off but it should reliably work on all systems.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.gpuAcceleration.on">
      <source xml:lang="en">Enable GPU acceleration within the terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.hideOnLastClosed">
      <source xml:lang="en">Whether to hide the terminal view when the last terminal is closed. This will only happen when the terminal is the only visible view in the view container.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.hideOnStartup">
      <source xml:lang="en">Whether to hide the terminal view on startup, avoiding creating a terminal when there are no persistent sessions.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.ignoreBracketedPasteMode">
      <source xml:lang="en">Controls whether the terminal will ignore bracketed paste mode even if the terminal was put into the mode, omitting the {0} and {1} sequences when pasting. This is useful when the shell is not respecting the mode which can happen in sub-shells for example.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.letterSpacing">
      <source xml:lang="en">Controls the letter spacing of the terminal. This is an integer value which represents the number of additional pixels to add between characters.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.lineHeight">
      <source xml:lang="en">Controls the line height of the terminal. This number is multiplied by the terminal font size to get the actual line-height in pixels.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.macOptionClickForcesSelection">
      <source xml:lang="en">Controls whether to force selection when using Option+click on macOS. This will force a regular (line) selection and disallow the use of column selection mode. This enables copying and pasting using the regular terminal selection, for example, when mouse mode is enabled in tmux.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.macOptionIsMeta">
      <source xml:lang="en">Controls whether to treat the option key as the meta key in the terminal on macOS.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.middleClickBehavior">
      <source xml:lang="en">Controls how terminal reacts to middle click.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.middleClickBehavior.default">
      <source xml:lang="en">The platform default to focus the terminal. On Linux this will also paste the selection.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.middleClickBehavior.paste">
      <source xml:lang="en">Paste on middle click.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.minimumContrastRatio">
      <source xml:lang="en">When set, the foreground color of each cell will change to try meet the contrast ratio specified. Note that this will not apply to `powerline` characters per #146406. Example values:

- 1: Do nothing and use the standard theme colors.
- 4.5: [WCAG AA compliance (minimum)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) (default).
- 7: [WCAG AAA compliance (enhanced)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).
- 21: White on black or black on white.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.mouseWheelScrollSensitivity">
      <source xml:lang="en">A multiplier to be used on the `deltaY` of mouse wheel scroll events.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.persistentSessionReviveProcess">
      <source xml:lang="en">When the terminal process must be shut down (for example on window or application close), this determines when the previous terminal session contents/history should be restored and processes be recreated when the workspace is next opened.

Caveats:

- Restoring of the process current working directory depends on whether it is supported by the shell.
- Time to persist the session during shutdown is limited, so it may be aborted when using high-latency remote connections.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.persistentSessionReviveProcess.never">
      <source xml:lang="en">Never restore the terminal buffers or recreate the process.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.persistentSessionReviveProcess.onExit">
      <source xml:lang="en">Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu).</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.persistentSessionReviveProcess.onExitAndWindowClose">
      <source xml:lang="en">Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), or when the window is closed.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.rescaleOverlappingGlyphs">
      <source xml:lang="en">Whether to rescale glyphs horizontally that are a single cell wide but have glyphs that would overlap following cell(s). This typically happens for ambiguous width characters (eg. the roman numeral characters U+2160+) which aren't featured in monospace fonts. Emoji glyphs are never rescaled.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.rightClickBehavior">
      <source xml:lang="en">Controls how terminal reacts to right click.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.rightClickBehavior.copyPaste">
      <source xml:lang="en">Copy when there is a selection, otherwise paste.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.rightClickBehavior.default">
      <source xml:lang="en">Show the context menu.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.rightClickBehavior.nothing">
      <source xml:lang="en">Do nothing and pass event to terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.rightClickBehavior.paste">
      <source xml:lang="en">Paste on right click.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.rightClickBehavior.selectWord">
      <source xml:lang="en">Select the word under the cursor and show the context menu.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.scrollback">
      <source xml:lang="en">Controls the maximum number of lines the terminal keeps in its buffer. We pre-allocate memory based on this value in order to ensure a smooth experience. As such, as the value increases, so will the amount of memory.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.sendKeybindingsToShell">
      <source xml:lang="en">Dispatches most keybindings to the terminal instead of the workbench, overriding {0}, which can be used alternatively for fine tuning.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.shellIntegration.decorationsEnabled">
      <source xml:lang="en">When shell integration is enabled, adds a decoration for each command.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.shellIntegration.decorationsEnabled.both">
      <source xml:lang="en">Show decorations in the gutter (left) and overview ruler (right)</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.shellIntegration.decorationsEnabled.gutter">
      <source xml:lang="en">Show gutter decorations to the left of the terminal</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.shellIntegration.decorationsEnabled.never">
      <source xml:lang="en">Do not show decorations</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.shellIntegration.decorationsEnabled.overviewRuler">
      <source xml:lang="en">Show overview ruler decorations to the right of the terminal</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.shellIntegration.enabled">
      <source xml:lang="en">Determines whether or not shell integration is auto-injected to support features like enhanced command tracking and current working directory detection. 

Shell integration works by injecting the shell with a startup script. The script gives VS Code insight into what is happening within the terminal.

Supported shells:

- Linux/macOS: bash, fish, pwsh, zsh
 - Windows: pwsh, git bash

This setting applies only when terminals are created, so you will need to restart your terminals for it to take effect.

 Note that the script injection may not work if you have custom arguments defined in the terminal profile, have enabled {1}, have a [complex bash `PROMPT_COMMAND`](https://code.visualstudio.com/docs/editor/integrated-terminal#_complex-bash-promptcommand), or other unsupported setup. To disable decorations, see {0}</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.shellIntegration.environmentReporting">
      <source xml:lang="en">Controls whether to report the shell environment, enabling its use in features such as {0}. This may cause a slowdown when printing your shell's prompt.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.showExitAlert">
      <source xml:lang="en">Controls whether to show the alert "The terminal process terminated with exit code" when exit code is non-zero.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.smoothScrolling">
      <source xml:lang="en">Controls whether the terminal will scroll using an animation.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.splitCwd">
      <source xml:lang="en">Controls the working directory a split terminal starts with.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.splitCwd.inherited">
      <source xml:lang="en">On macOS and Linux, a new split terminal will use the working directory of the parent terminal. On Windows, this behaves the same as initial.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.splitCwd.initial">
      <source xml:lang="en">A new split terminal will use the working directory that the parent terminal started with.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.splitCwd.workspaceRoot">
      <source xml:lang="en">A new split terminal will use the workspace root as the working directory. In a multi-root workspace a choice for which root folder to use is offered.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabStopWidth">
      <source xml:lang="en">The number of cells in a tab stop.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.defaultColor">
      <source xml:lang="en">A theme color ID to associate with terminal icons by default.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.defaultIcon">
      <source xml:lang="en">A codicon ID to associate with terminal icons by default.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.enableAnimation">
      <source xml:lang="en">Controls whether terminal tab statuses support animation (eg. in progress tasks).</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.enabled">
      <source xml:lang="en">Controls whether terminal tabs display as a list to the side of the terminal. When this is disabled a dropdown will display instead.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.focusMode">
      <source xml:lang="en">Controls whether focusing the terminal of a tab happens on double or single click.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.focusMode.doubleClick">
      <source xml:lang="en">Focus the terminal when double-clicking a terminal tab</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.focusMode.singleClick">
      <source xml:lang="en">Focus the terminal when clicking a terminal tab</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.hideCondition">
      <source xml:lang="en">Controls whether the terminal tabs view will hide under certain conditions.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.hideCondition.never">
      <source xml:lang="en">Never hide the terminal tabs view</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.hideCondition.singleGroup">
      <source xml:lang="en">Hide the terminal tabs view when there is only a single terminal group opened</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.hideCondition.singleTerminal">
      <source xml:lang="en">Hide the terminal tabs view when there is only a single terminal opened</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.location">
      <source xml:lang="en">Controls the location of the terminal tabs, either to the left or right of the actual terminal(s).</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.location.left">
      <source xml:lang="en">Show the terminal tabs view to the left of the terminal</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.location.right">
      <source xml:lang="en">Show the terminal tabs view to the right of the terminal</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.separator">
      <source xml:lang="en">Separator used by {0} and {1}.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActions">
      <source xml:lang="en">Controls whether terminal split and kill buttons are displays next to the new terminal button.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActions.always">
      <source xml:lang="en">Always show the actions</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActions.never">
      <source xml:lang="en">Never show the actions</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActions.singleTerminal">
      <source xml:lang="en">Show the actions when it is the only terminal opened</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActions.singleTerminalOrNarrow">
      <source xml:lang="en">Show the actions when it is the only terminal opened or when the tabs view is in its narrow textless state</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActiveTerminal">
      <source xml:lang="en">Shows the active terminal information in the view. This is particularly useful when the title within the tabs aren't visible.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActiveTerminal.always">
      <source xml:lang="en">Always show the active terminal</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActiveTerminal.never">
      <source xml:lang="en">Never show the active terminal</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActiveTerminal.singleTerminal">
      <source xml:lang="en">Show the active terminal when it is the only terminal opened</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.tabs.showActiveTerminal.singleTerminalOrNarrow">
      <source xml:lang="en">Show the active terminal when it is the only terminal opened or when the tabs view is in its narrow textless state</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.unicodeVersion">
      <source xml:lang="en">Controls what version of Unicode to use when evaluating the width of characters in the terminal. If you experience emoji or other wide characters not taking up the right amount of space or backspace either deleting too much or too little then you may want to try tweaking this setting.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.unicodeVersion.eleven">
      <source xml:lang="en">Version 11 of Unicode. This version provides better support on modern systems that use modern versions of Unicode.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.unicodeVersion.six">
      <source xml:lang="en">Version 6 of Unicode. This is an older version which should work better on older systems.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.windowsEnableConpty">
      <source xml:lang="en">Whether to use ConPTY for Windows terminal process communication (requires Windows 10 build number 18309+). Winpty will be used if this is false.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.windowsUseConptyDll">
      <source xml:lang="en">Whether to use the experimental conpty.dll (v1.22.250204002) shipped with VS Code, instead of the one bundled with Windows.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.wordSeparators">
      <source xml:lang="en">A string containing all characters to be considered word separators when double-clicking to select word and in the fallback 'word' link detection. Since this is used for link detection, including characters such as `:` that are used when detecting links will cause the line and column part of links like `file:10:5` to be ignored.</source>
    </trans-unit>
    <trans-unit id="terminalDescription">
      <source xml:lang="en">Controls the terminal description, which appears to the right of the title. Variables are substituted based on the context:</source>
    </trans-unit>
    <trans-unit id="terminalIntegratedConfigurationTitle">
      <source xml:lang="en">Integrated Terminal</source>
    </trans-unit>
    <trans-unit id="terminalTitle">
      <source xml:lang="en">Controls the terminal title. Variables are substituted based on the context:</source>
    </trans-unit>
    <trans-unit id="workspaceFolder">
      <source xml:lang="en">the workspace in which the terminal was launched</source>
    </trans-unit>
    <trans-unit id="workspaceFolderName">
      <source xml:lang="en">the `name` of the workspace in which the terminal was launched</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/common/terminalContextKey" source-language="en" datatype="plaintext"><body>
    <trans-unit id="inTerminalRunCommandPickerContextKey">
      <source xml:lang="en">Whether the terminal run command picker is currently open.</source>
    </trans-unit>
    <trans-unit id="isSplitTerminalContextKey">
      <source xml:lang="en">Whether the focused tab's terminal is a split terminal.</source>
    </trans-unit>
    <trans-unit id="terminalAltBufferActive">
      <source xml:lang="en">Whether the terminal's alt buffer is active.</source>
    </trans-unit>
    <trans-unit id="terminalCountContextKey">
      <source xml:lang="en">The current number of terminals.</source>
    </trans-unit>
    <trans-unit id="terminalEditorFocusContextKey">
      <source xml:lang="en">Whether a terminal in the editor area is focused.</source>
    </trans-unit>
    <trans-unit id="terminalFocusContextKey">
      <source xml:lang="en">Whether the terminal is focused.</source>
    </trans-unit>
    <trans-unit id="terminalFocusInAnyContextKey">
      <source xml:lang="en">Whether any terminal is focused, including detached terminals used in other UI.</source>
    </trans-unit>
    <trans-unit id="terminalProcessSupportedContextKey">
      <source xml:lang="en">Whether terminal processes can be launched in the current workspace.</source>
    </trans-unit>
    <trans-unit id="terminalShellIntegrationEnabled">
      <source xml:lang="en">Whether shell integration is enabled in the active terminal</source>
    </trans-unit>
    <trans-unit id="terminalShellTypeContextKey">
      <source xml:lang="en">The shell type of the active terminal, this is set if the type can be detected.</source>
    </trans-unit>
    <trans-unit id="terminalSuggestWidgetVisible">
      <source xml:lang="en">Whether the terminal's suggest widget is visible.</source>
    </trans-unit>
    <trans-unit id="terminalTabsFocusContextKey">
      <source xml:lang="en">Whether the terminal tabs widget is focused.</source>
    </trans-unit>
    <trans-unit id="terminalTabsSingularSelectedContextKey">
      <source xml:lang="en">Whether one terminal is selected in the terminal tabs list.</source>
    </trans-unit>
    <trans-unit id="terminalTextSelectedContextKey">
      <source xml:lang="en">Whether text is selected in the active terminal.</source>
    </trans-unit>
    <trans-unit id="terminalTextSelectedInFocusedContextKey">
      <source xml:lang="en">Whether text is selected in a focused terminal.</source>
    </trans-unit>
    <trans-unit id="terminalViewShowing">
      <source xml:lang="en">Whether the terminal view is showing</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/common/terminalStrings" source-language="en" datatype="plaintext"><body>
    <trans-unit id="currentSessionCategory">
      <source xml:lang="en">current session</source>
    </trans-unit>
    <trans-unit id="doNotShowAgain">
      <source xml:lang="en">Do Not Show Again</source>
    </trans-unit>
    <trans-unit id="killTerminal">
      <source xml:lang="en">Kill Terminal</source>
    </trans-unit>
    <trans-unit id="killTerminal.short">
      <source xml:lang="en">Kill</source>
    </trans-unit>
    <trans-unit id="local">
      <source xml:lang="en">Local</source>
    </trans-unit>
    <trans-unit id="moveIntoNewWindow">
      <source xml:lang="en">Move Terminal into New Window</source>
    </trans-unit>
    <trans-unit id="moveToEditor">
      <source xml:lang="en">Move Terminal into Editor Area</source>
    </trans-unit>
    <trans-unit id="previousSessionCategory">
      <source xml:lang="en">previous session</source>
    </trans-unit>
    <trans-unit id="splitTerminal">
      <source xml:lang="en">Split Terminal</source>
    </trans-unit>
    <trans-unit id="splitTerminal.short">
      <source xml:lang="en">Split</source>
    </trans-unit>
    <trans-unit id="task">
      <source xml:lang="en">Task</source>
    </trans-unit>
    <trans-unit id="terminal">
      <source xml:lang="en">Terminal</source>
    </trans-unit>
    <trans-unit id="terminal.new">
      <source xml:lang="en">New Terminal</source>
    </trans-unit>
    <trans-unit id="terminalCategory">
      <source xml:lang="en">Terminal</source>
    </trans-unit>
    <trans-unit id="unsplitTerminal">
      <source xml:lang="en">Unsplit Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.changeColor">
      <source xml:lang="en">Change Color...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.changeIcon">
      <source xml:lang="en">Change Icon...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focus">
      <source xml:lang="en">Focus Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focusAndHideAccessibleBuffer">
      <source xml:lang="en">Focus Terminal and Hide Accessible Buffer</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focusHover">
      <source xml:lang="en">Focus Hover</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.moveToTerminalPanel">
      <source xml:lang="en">Move Terminal into Panel</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newWithCwd">
      <source xml:lang="en">Create New Terminal Starting in a Custom Working Directory</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.rename">
      <source xml:lang="en">Rename...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.renameWithArg">
      <source xml:lang="en">Rename the Currently Active Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollToNextCommand">
      <source xml:lang="en">Scroll To Next Command</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollToPreviousCommand">
      <source xml:lang="en">Scroll To Previous Command</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.sendSequence">
      <source xml:lang="en">Send Custom Sequence To Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.sizeToContentWidthInstance">
      <source xml:lang="en">Toggle Size to Content Width</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminal/electron-sandbox/terminalRemote" source-language="en" datatype="plaintext"><body>
    <trans-unit id="workbench.action.terminal.newLocal">
      <source xml:lang="en">Create New Integrated Terminal (Local)</source>
    </trans-unit>
</body></file>
</xliff>