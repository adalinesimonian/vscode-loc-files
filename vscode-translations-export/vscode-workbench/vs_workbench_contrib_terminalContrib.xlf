<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/contrib/terminalContrib/accessibility/browser/terminal.accessibility.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="workbench.action.terminal.accessibleBufferGoToNextCommand">
      <source xml:lang="en">Accessible Buffer Go to Next Command</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.accessibleBufferGoToPreviousCommand">
      <source xml:lang="en">Accessible Buffer Go to Previous Command</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focusAccessibleBuffer">
      <source xml:lang="en">Focus Accessible Terminal View</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollToBottomAccessibleView">
      <source xml:lang="en">Scroll to Accessible View Bottom</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.scrollToTopAccessibleView">
      <source xml:lang="en">Scroll to Accessible View Top</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/accessibility/browser/terminalAccessibilityHelp" source-language="en" datatype="plaintext"><body>
    <trans-unit id="commandPromptMigration">
      <source xml:lang="en">Consider using powershell instead of command prompt for an improved experience</source>
    </trans-unit>
    <trans-unit id="focusAccessibleTerminalView">
      <source xml:lang="en">The Focus Accessible Terminal View command&lt;keybinding:{0}&gt; enables screen readers to read terminal contents.</source>
    </trans-unit>
    <trans-unit id="focusAfterRun">
      <source xml:lang="en">Configure what gets focused after running selected text in the terminal with `{0}`.</source>
    </trans-unit>
    <trans-unit id="focusViewOnExecution">
      <source xml:lang="en">Enable `terminal.integrated.accessibleViewFocusOnCommandExecution` to automatically focus the terminal accessible view when a command is executed in the terminal.</source>
    </trans-unit>
    <trans-unit id="goToNextCommand">
      <source xml:lang="en">Go to Next Command&lt;keybinding:{0}&gt; in the accessible view</source>
    </trans-unit>
    <trans-unit id="goToPreviousCommand">
      <source xml:lang="en">Go to Previous Command&lt;keybinding:{0}&gt; in the accessible view</source>
    </trans-unit>
    <trans-unit id="goToRecentDirectory">
      <source xml:lang="en">Go to Recent Directory&lt;keybinding:{0}&gt;</source>
    </trans-unit>
    <trans-unit id="goToSymbol">
      <source xml:lang="en">Go to Symbol&lt;keybinding:{0}&gt;</source>
    </trans-unit>
    <trans-unit id="newWithProfile">
      <source xml:lang="en">The Create New Terminal (With Profile) command&lt;keybinding:{0}&gt; allows for easy terminal creation using a specific profile.</source>
    </trans-unit>
    <trans-unit id="noShellIntegration">
      <source xml:lang="en">Shell integration is not enabled. Some accessibility features may not be available.</source>
    </trans-unit>
    <trans-unit id="openDetectedLink">
      <source xml:lang="en">The Open Detected Link command&lt;keybinding:{0}&gt; enables screen readers to easily open links found in the terminal.</source>
    </trans-unit>
    <trans-unit id="preserveCursor">
      <source xml:lang="en">Customize the behavior of the cursor when toggling between the terminal and accessible view with `terminal.integrated.accessibleViewPreserveCursorPosition.`</source>
    </trans-unit>
    <trans-unit id="runRecentCommand">
      <source xml:lang="en">Run Recent Command&lt;keybinding:{0}&gt;</source>
    </trans-unit>
    <trans-unit id="shellIntegration">
      <source xml:lang="en">The terminal has a feature called shell integration that offers an enhanced experience and provides useful commands for screen readers such as:</source>
    </trans-unit>
    <trans-unit id="suggestCommands">
      <source xml:lang="en">When the terminal suggest widget is focused, accept the suggestion&lt;keybinding:{0}&gt; and configure suggest settings&lt;keybinding:{1}&gt;.</source>
    </trans-unit>
    <trans-unit id="suggestCommandsMore">
      <source xml:lang="en">Also, when the suggest widget is focused, toggle between the widget and terminal&lt;keybinding:{0}&gt; and toggle details focus&lt;keybinding:{1}&gt; to learn more about the suggestion.</source>
    </trans-unit>
    <trans-unit id="suggestTrigger">
      <source xml:lang="en">The terminal request completions command can be invoked manually&lt;keybinding:{0}&gt;, but also appears while typing.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/accessibility/common/terminalAccessibilityConfiguration" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.integrated.accessibleViewFocusOnCommandExecution">
      <source xml:lang="en">Focus the terminal accessible view when a command is executed.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.accessibleViewPreserveCursorPosition">
      <source xml:lang="en">Preserve the cursor position on reopen of the terminal's accessible view rather than setting it to the bottom of the buffer.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/autoReplies/common/terminalAutoRepliesConfiguration" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.integrated.autoReplies">
      <source xml:lang="en">A set of messages that, when encountered in the terminal, will be automatically responded to. Provided the message is specific enough, this can help automate away common responses.

Remarks:

- Use {0} to automatically respond to the terminate batch job prompt on Windows.
- The message includes escape sequences so the reply might not happen with styled text.
- Each reply can only happen once every second.
- Use {1} in the reply to mean the enter key.
- To unset a default key, set the value to null.
- Restart VS Code if new don't apply.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.autoReplies.reply">
      <source xml:lang="en">The reply to send to the process.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/chat/browser/terminal.initialHint.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="disableHint">
      <source xml:lang="en"> Toggle {0} in settings to disable this hint.</source>
    </trans-unit>
    <trans-unit id="disableInitialHint">
      <source xml:lang="en">Disable Initial Hint</source>
    </trans-unit>
    <trans-unit id="emptyHintText">
      <source xml:lang="en">Open chat {0}. </source>
    </trans-unit>
    <trans-unit id="hintTextDismiss">
      <source xml:lang="en">Start typing to dismiss.</source>
    </trans-unit>
    <trans-unit id="inlineChatHint">
      <source xml:lang="en">[[Open chat]] or start typing to dismiss.</source>
      <note>Preserve double-square brackets and their order</note>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/chat/browser/terminalChat" source-language="en" datatype="plaintext"><body>
    <trans-unit id="chatAgentRegisteredContextKey">
      <source xml:lang="en">Whether a chat agent is registered for the terminal location.</source>
    </trans-unit>
    <trans-unit id="chatFocusedContextKey">
      <source xml:lang="en">Whether the chat view is focused.</source>
    </trans-unit>
    <trans-unit id="chatInputHasTextContextKey">
      <source xml:lang="en">Whether the chat input has text.</source>
    </trans-unit>
    <trans-unit id="chatRequestActiveContextKey">
      <source xml:lang="en">Whether there is an active chat request.</source>
    </trans-unit>
    <trans-unit id="chatResponseContainsCodeBlockContextKey">
      <source xml:lang="en">Whether the chat response contains a code block.</source>
    </trans-unit>
    <trans-unit id="chatResponseContainsMultipleCodeBlocksContextKey">
      <source xml:lang="en">Whether the chat response contains multiple code blocks.</source>
    </trans-unit>
    <trans-unit id="chatVisibleContextKey">
      <source xml:lang="en">Whether the chat view is visible.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/chat/browser/terminalChatAccessibilityHelp" source-language="en" datatype="plaintext"><body>
    <trans-unit id="chat.signals">
      <source xml:lang="en">Accessibility Signals can be changed via settings with a prefix of signals.chat. By default, if a request takes more than 4 seconds, you will hear a sound indicating that progress is still occurring.</source>
    </trans-unit>
    <trans-unit id="inlineChat.access">
      <source xml:lang="en">It can be activated using the command: Terminal: Start Chat ({0}), which will focus the input box.</source>
    </trans-unit>
    <trans-unit id="inlineChat.focusInput">
      <source xml:lang="en">Reach the input box from the response ({0}).</source>
    </trans-unit>
    <trans-unit id="inlineChat.focusInputNoKb">
      <source xml:lang="en">Reach the response from the input box by shift+tabbing or assigning a keybinding for the command: Focus Terminal Input.</source>
    </trans-unit>
    <trans-unit id="inlineChat.focusResponse">
      <source xml:lang="en">Reach the response from the input box ({0}).</source>
    </trans-unit>
    <trans-unit id="inlineChat.focusResponseNoKb">
      <source xml:lang="en">Reach the response from the input box by tabbing or assigning a keybinding for the command: Focus Terminal Response.</source>
    </trans-unit>
    <trans-unit id="inlineChat.input">
      <source xml:lang="en">The input box is where the user can type a request and can make the request ({0}). The widget will be closed and all content will be discarded when the Escape key is pressed and the terminal will regain focus.</source>
    </trans-unit>
    <trans-unit id="inlineChat.inputNoKb">
      <source xml:lang="en">The input box is where the user can type a request and can make the request by tabbing to the Make Request button, which is not currently triggerable via keybindings. The widget will be closed and all content will be discarded when the Escape key is pressed and the terminal will regain focus.</source>
    </trans-unit>
    <trans-unit id="inlineChat.insertCommand">
      <source xml:lang="en">With focus in the input box command editor, the Terminal: Insert Chat Command ({0}) action.</source>
    </trans-unit>
    <trans-unit id="inlineChat.insertCommandNoKb">
      <source xml:lang="en">Insert a command by tabbing to the button as the action is currently not triggerable by a keybinding.</source>
    </trans-unit>
    <trans-unit id="inlineChat.inspectResponseMessage">
      <source xml:lang="en">The response can be inspected in the accessible view ({0}).</source>
    </trans-unit>
    <trans-unit id="inlineChat.inspectResponseNoKb">
      <source xml:lang="en">With the input box focused, inspect the response in the accessible view via the Open Accessible View command, which is currently not triggerable by a keybinding.</source>
    </trans-unit>
    <trans-unit id="inlineChat.overview">
      <source xml:lang="en">Inline chat occurs within a terminal. It is useful for suggesting terminal commands. Keep in mind that AI generated code may be incorrect.</source>
    </trans-unit>
    <trans-unit id="inlineChat.runCommand">
      <source xml:lang="en">With focus in the input box or command editor, the Terminal: Run Chat Command ({0}) action.</source>
    </trans-unit>
    <trans-unit id="inlineChat.runCommandNoKb">
      <source xml:lang="en">Run a command by tabbing to the button as the action is currently not triggerable by a keybinding.</source>
    </trans-unit>
    <trans-unit id="inlineChat.toolbar">
      <source xml:lang="en">Use tab to reach conditional parts like commands, status, message responses and more.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/chat/browser/terminalChatActions" source-language="en" datatype="plaintext"><body>
    <trans-unit id="chat.rerun.label">
      <source xml:lang="en">Rerun Request</source>
    </trans-unit>
    <trans-unit id="closeChat">
      <source xml:lang="en">Close</source>
    </trans-unit>
    <trans-unit id="insert">
      <source xml:lang="en">Insert</source>
    </trans-unit>
    <trans-unit id="insertCommand">
      <source xml:lang="en">Insert Chat Command</source>
    </trans-unit>
    <trans-unit id="insertFirst">
      <source xml:lang="en">Insert First</source>
    </trans-unit>
    <trans-unit id="insertFirstCommand">
      <source xml:lang="en">Insert First Chat Command</source>
    </trans-unit>
    <trans-unit id="run">
      <source xml:lang="en">Run</source>
    </trans-unit>
    <trans-unit id="runCommand">
      <source xml:lang="en">Run Chat Command</source>
    </trans-unit>
    <trans-unit id="runFirst">
      <source xml:lang="en">Run First</source>
    </trans-unit>
    <trans-unit id="runFirstCommand">
      <source xml:lang="en">Run First Chat Command</source>
    </trans-unit>
    <trans-unit id="startChat">
      <source xml:lang="en">Terminal Inline Chat</source>
    </trans-unit>
    <trans-unit id="viewInChat">
      <source xml:lang="en">View in Chat</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/chat/browser/terminalChatWidget" source-language="en" datatype="plaintext"><body>
    <trans-unit id="askAI">
      <source xml:lang="en">Ask AI</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/chat/common/terminalInitialHintConfiguration" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.integrated.initialHint">
      <source xml:lang="en">Controls if the first terminal without input will show a hint about available actions when it is focused.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/clipboard/browser/terminal.clipboard.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="workbench.action.terminal.copyAndClearSelection">
      <source xml:lang="en">Copy and Clear Selection</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.copyLastCommand">
      <source xml:lang="en">Copy Last Command</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.copyLastCommandAndOutput">
      <source xml:lang="en">Copy Last Command and Output</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.copyLastCommandOutput">
      <source xml:lang="en">Copy Last Command Output</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.copySelection">
      <source xml:lang="en">Copy Selection</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.copySelectionAsHtml">
      <source xml:lang="en">Copy Selection as HTML</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.paste">
      <source xml:lang="en">Paste into Active Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.pasteSelection">
      <source xml:lang="en">Paste Selection into Active Terminal</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/clipboard/browser/terminalClipboard" source-language="en" datatype="plaintext"><body>
    <trans-unit id="confirmMoveTrashMessageFilesAndDirectories">
      <source xml:lang="en">Are you sure you want to paste {0} lines of text into the terminal?</source>
    </trans-unit>
    <trans-unit id="doNotAskAgain">
      <source xml:lang="en">Do not ask me again</source>
    </trans-unit>
    <trans-unit id="multiLinePasteButton">
      <source xml:lang="en">&amp;&amp;Paste</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="multiLinePasteButton.oneLine">
      <source xml:lang="en">Paste as &amp;&amp;one line</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="preview">
      <source xml:lang="en">Preview:</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/commandGuide/browser/terminal.commandGuide.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminalCommandGuide.foreground">
      <source xml:lang="en">The foreground color of the terminal command guide that appears to the left of a command and its output on hover.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/commandGuide/common/terminalCommandGuideConfiguration" source-language="en" datatype="plaintext"><body>
    <trans-unit id="showCommandGuide">
      <source xml:lang="en">Whether to show the command guide when hovering over a command in the terminal.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/developer/browser/terminal.developer.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="workbench.action.terminal.recordSession">
      <source xml:lang="en">Record Terminal Session</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.recordSession.recording">
      <source xml:lang="en">Recording terminal session...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.restartPtyHost">
      <source xml:lang="en">Restart Pty Host</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.showTextureAtlas">
      <source xml:lang="en">Show Terminal Texture Atlas</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.writeDataToTerminal">
      <source xml:lang="en">Write Data to Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.writeDataToTerminal.prompt">
      <source xml:lang="en">Enter data to write directly to the terminal, bypassing the pty</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/environmentChanges/browser/terminal.environmentChanges.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="ScopedEnvironmentContributionInfo">
      <source xml:lang="en">workspace</source>
    </trans-unit>
    <trans-unit id="envChanges">
      <source xml:lang="en">Terminal Environment Changes</source>
    </trans-unit>
    <trans-unit id="extension">
      <source xml:lang="en">Extension: {0}</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.showEnvironmentContributions">
      <source xml:lang="en">Show Environment Contributions</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/find/browser/terminal.find.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="workbench.action.terminal.findNext">
      <source xml:lang="en">Find Next</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.findPrevious">
      <source xml:lang="en">Find Previous</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.focusFind">
      <source xml:lang="en">Focus Find</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.hideFind">
      <source xml:lang="en">Hide Find</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.searchWorkspace">
      <source xml:lang="en">Search Workspace</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.toggleFindCaseSensitive">
      <source xml:lang="en">Toggle Find Using Case Sensitive</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.toggleFindRegex">
      <source xml:lang="en">Toggle Find Using Regex</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.toggleFindWholeWord">
      <source xml:lang="en">Toggle Find Using Whole Word</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/history/browser/terminal.history.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="goToRecentDirectory.metadata">
      <source xml:lang="en">Goes to a recent folder</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.clearPreviousSessionHistory">
      <source xml:lang="en">Clear Previous Session History</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.goToRecentDirectory">
      <source xml:lang="en">Go to Recent Directory...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.runRecentCommand">
      <source xml:lang="en">Run Recent Command...</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/history/browser/terminalRunRecentQuickPick" source-language="en" datatype="plaintext"><body>
    <trans-unit id="openShellHistoryFile">
      <source xml:lang="en">Open File</source>
    </trans-unit>
    <trans-unit id="removeCommand">
      <source xml:lang="en">Remove from Command History</source>
    </trans-unit>
    <trans-unit id="selectRecentCommand">
      <source xml:lang="en">Select a command to run (hold Alt-key to edit the command)</source>
    </trans-unit>
    <trans-unit id="selectRecentCommandMac">
      <source xml:lang="en">Select a command to run (hold Option-key to edit the command)</source>
    </trans-unit>
    <trans-unit id="selectRecentDirectory">
      <source xml:lang="en">Select a directory to go to (hold Alt-key to edit the command)</source>
    </trans-unit>
    <trans-unit id="selectRecentDirectoryMac">
      <source xml:lang="en">Select a directory to go to (hold Option-key to edit the command)</source>
    </trans-unit>
    <trans-unit id="shellFileHistoryCategory">
      <source xml:lang="en">{0} history</source>
    </trans-unit>
    <trans-unit id="viewCommandOutput">
      <source xml:lang="en">View Command Output</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/history/common/terminal.history" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.integrated.shellIntegration.history">
      <source xml:lang="en">Controls the number of recently used commands to keep in the terminal command history. Set to 0 to disable terminal command history.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/links/browser/terminal.links.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="workbench.action.terminal.openDetectedLink">
      <source xml:lang="en">Open Detected Link...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.openLastLocalFileLink">
      <source xml:lang="en">Open Last Local File Link</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.openLastUrlLink">
      <source xml:lang="en">Open Last URL Link</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.openLastUrlLink.description">
      <source xml:lang="en">Opens the last detected URL/URI link in the terminal</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkDetectorAdapter" source-language="en" datatype="plaintext"><body>
    <trans-unit id="focusFolder">
      <source xml:lang="en">Focus folder in explorer</source>
    </trans-unit>
    <trans-unit id="followLink">
      <source xml:lang="en">Follow link</source>
    </trans-unit>
    <trans-unit id="openFile">
      <source xml:lang="en">Open file in editor</source>
    </trans-unit>
    <trans-unit id="openFolder">
      <source xml:lang="en">Open folder in new window</source>
    </trans-unit>
    <trans-unit id="searchWorkspace">
      <source xml:lang="en">Search workspace</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkManager" source-language="en" datatype="plaintext"><body>
    <trans-unit id="allow">
      <source xml:lang="en">Allow {0}</source>
    </trans-unit>
    <trans-unit id="followForwardedLink">
      <source xml:lang="en">Follow link using forwarded port</source>
    </trans-unit>
    <trans-unit id="followLink">
      <source xml:lang="en">Follow link</source>
    </trans-unit>
    <trans-unit id="followLinkUrl">
      <source xml:lang="en">Link</source>
    </trans-unit>
    <trans-unit id="scheme">
      <source xml:lang="en">Opening URIs can be insecure, do you want to allow opening links with the scheme {0}?</source>
    </trans-unit>
    <trans-unit id="terminalLinkHandler.followLinkAlt">
      <source xml:lang="en">alt + click</source>
    </trans-unit>
    <trans-unit id="terminalLinkHandler.followLinkAlt.mac">
      <source xml:lang="en">option + click</source>
    </trans-unit>
    <trans-unit id="terminalLinkHandler.followLinkCmd">
      <source xml:lang="en">cmd + click</source>
    </trans-unit>
    <trans-unit id="terminalLinkHandler.followLinkCtrl">
      <source xml:lang="en">ctrl + click</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkQuickpick" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.integrated.localFileLinks">
      <source xml:lang="en">File</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.localFolderLinks">
      <source xml:lang="en">Folder</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.openDetectedLink">
      <source xml:lang="en">Select the link to open, type to filter all links</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.searchLinks">
      <source xml:lang="en">Workspace Search</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.urlLinks">
      <source xml:lang="en">Url</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/quickAccess/browser/terminal.quickAccess.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="quickAccessTerminal">
      <source xml:lang="en">Switch Active Terminal</source>
    </trans-unit>
    <trans-unit id="tasksQuickAccessHelp">
      <source xml:lang="en">Show All Opened Terminals</source>
    </trans-unit>
    <trans-unit id="tasksQuickAccessPlaceholder">
      <source xml:lang="en">Type the name of a terminal to open.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/quickAccess/browser/terminalQuickAccess" source-language="en" datatype="plaintext"><body>
    <trans-unit id="renameTerminal">
      <source xml:lang="en">Rename Terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newWithProfilePlus">
      <source xml:lang="en">Create New Terminal With Profile...</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.newplus">
      <source xml:lang="en">Create New Terminal</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/quickFix/browser/quickFixAddon" source-language="en" datatype="plaintext"><body>
    <trans-unit id="codeAction.widget.id.quickfix">
      <source xml:lang="en">Quick Fix</source>
    </trans-unit>
    <trans-unit id="quickFix.command">
      <source xml:lang="en">Run: {0}</source>
    </trans-unit>
    <trans-unit id="quickFix.opener">
      <source xml:lang="en">Open: {0}</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/quickFix/browser/terminal.quickFix.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="workbench.action.terminal.showQuickFixes">
      <source xml:lang="en">Show Terminal Quick Fixes</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixBuiltinActions" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.createPR">
      <source xml:lang="en">Create PR {0}</source>
    </trans-unit>
    <trans-unit id="terminal.freePort">
      <source xml:lang="en">Free port {0}</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixService" source-language="en" datatype="plaintext"><body>
    <trans-unit id="vscode.extension.contributes.terminalQuickFixes">
      <source xml:lang="en">Contributes terminal quick fixes.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminalQuickFixes.commandExitResult">
      <source xml:lang="en">The command exit result to match on</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminalQuickFixes.commandLineMatcher">
      <source xml:lang="en">A regular expression or string to test the command line against</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminalQuickFixes.id">
      <source xml:lang="en">The ID of the quick fix provider</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminalQuickFixes.kind">
      <source xml:lang="en">The kind of the resulting quick fix. This changes how the quick fix is presented. Defaults to {0}.</source>
    </trans-unit>
    <trans-unit id="vscode.extension.contributes.terminalQuickFixes.outputMatcher">
      <source xml:lang="en">A regular expression or string to match a single line of the output against, which provides groups to be referenced in terminalCommand and uri.

For example:

 `lineMatcher: /git push --set-upstream origin (?&lt;branchName&gt;[^s]+)/;`

`terminalCommand: 'git push --set-upstream origin ${group:branchName}';`
</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/sendSequence/browser/terminal.sendSequence.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="sendSequence">
      <source xml:lang="en">Send Sequence</source>
    </trans-unit>
    <trans-unit id="sendSequence.text.desc">
      <source xml:lang="en">The sequence of text to send to the terminal</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.sendSequence.prompt">
      <source xml:lang="en">Enter sequence to send to the terminal</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/sendSignal/browser/terminal.sendSignal.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="SIGCONT">
      <source xml:lang="en">Continue process</source>
    </trans-unit>
    <trans-unit id="SIGHUP">
      <source xml:lang="en">Hangup</source>
    </trans-unit>
    <trans-unit id="SIGINT">
      <source xml:lang="en">Interrupt process (Ctrl+C)</source>
    </trans-unit>
    <trans-unit id="SIGKILL">
      <source xml:lang="en">Force kill process</source>
    </trans-unit>
    <trans-unit id="SIGQUIT">
      <source xml:lang="en">Quit process</source>
    </trans-unit>
    <trans-unit id="SIGSTOP">
      <source xml:lang="en">Stop process</source>
    </trans-unit>
    <trans-unit id="SIGTERM">
      <source xml:lang="en">Terminate process gracefully</source>
    </trans-unit>
    <trans-unit id="SIGUSR1">
      <source xml:lang="en">User-defined signal 1</source>
    </trans-unit>
    <trans-unit id="SIGUSR2">
      <source xml:lang="en">User-defined signal 2</source>
    </trans-unit>
    <trans-unit id="enterSignal">
      <source xml:lang="en">Enter signal name (e.g., SIGTERM, SIGKILL)</source>
    </trans-unit>
    <trans-unit id="manualSignal">
      <source xml:lang="en">Manually enter signal</source>
    </trans-unit>
    <trans-unit id="selectSignal">
      <source xml:lang="en">Select signal to send to terminal process</source>
    </trans-unit>
    <trans-unit id="sendSignal">
      <source xml:lang="en">Send Signal</source>
    </trans-unit>
    <trans-unit id="sendSignal.signal.desc">
      <source xml:lang="en">The signal to send to the terminal process (e.g., 'SIGTERM', 'SIGINT', 'SIGKILL')</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminal.stickyScroll.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="miStickyScroll">
      <source xml:lang="en">&amp;&amp;Sticky Scroll</source>
      <note>&amp;&amp; denotes a mnemonic</note>
    </trans-unit>
    <trans-unit id="stickyScroll">
      <source xml:lang="en">Sticky Scroll</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.toggleStickyScroll">
      <source xml:lang="en">Toggle Sticky Scroll</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollColorRegistry" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminalStickyScroll.background">
      <source xml:lang="en">The background color of the sticky scroll overlay in the terminal.</source>
    </trans-unit>
    <trans-unit id="terminalStickyScroll.border">
      <source xml:lang="en">The border of the sticky scroll overlay in the terminal.</source>
    </trans-unit>
    <trans-unit id="terminalStickyScrollHover.background">
      <source xml:lang="en">The background color of the sticky scroll overlay in the terminal when hovered.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollOverlay" source-language="en" datatype="plaintext"><body>
    <trans-unit id="labelWithKeybinding">
      <source xml:lang="en">{0} ({1})</source>
    </trans-unit>
    <trans-unit id="stickyScrollHoverTitle">
      <source xml:lang="en">Navigate to Command</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/stickyScroll/common/terminalStickyScrollConfiguration" source-language="en" datatype="plaintext"><body>
    <trans-unit id="stickyScroll.enabled">
      <source xml:lang="en">Shows the current command at the top of the terminal. This feature requires [shell integration]({0}) to be activated. See {1}.</source>
    </trans-unit>
    <trans-unit id="stickyScroll.maxLineCount">
      <source xml:lang="en">Defines the maximum number of sticky lines to show. Sticky scroll lines will never exceed 40% of the viewport regardless of this setting.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/suggest/browser/terminal.suggest.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="workbench.action.terminal.acceptSelectedSuggestion">
      <source xml:lang="en">Insert</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.acceptSelectedSuggestionEnter">
      <source xml:lang="en">Accept Selected Suggestion (Enter)</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.configureSuggestSettings">
      <source xml:lang="en">Configure</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.hideSuggestWidget">
      <source xml:lang="en">Hide Suggest Widget</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.hideSuggestWidgetAndNavigateHistory">
      <source xml:lang="en">Hide Suggest Widget and Navigate History</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.learnMore">
      <source xml:lang="en">Learn More</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.requestCompletions">
      <source xml:lang="en">Request Completions</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.resetSuggestWidgetSize">
      <source xml:lang="en">Reset Suggest Widget Size</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectNextPageSuggestion">
      <source xml:lang="en">Select the Next Page Suggestion</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectNextSuggestion">
      <source xml:lang="en">Select the Next Suggestion</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectPrevPageSuggestion">
      <source xml:lang="en">Select the Previous Page Suggestion</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.selectPrevSuggestion">
      <source xml:lang="en">Select the Previous Suggestion</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.suggestToggleDetails">
      <source xml:lang="en">Suggest Toggle Details</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.suggestToggleDetailsFocus">
      <source xml:lang="en">Suggest Toggle Suggestion Focus</source>
    </trans-unit>
    <trans-unit id="workbench.action.terminal.suggestToggleExplainMode">
      <source xml:lang="en">Suggest Toggle Explain Modes</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/suggest/browser/terminalSuggestAddon" source-language="en" datatype="plaintext"><body>
    <trans-unit id="alias">
      <source xml:lang="en">Alias</source>
    </trans-unit>
    <trans-unit id="argument">
      <source xml:lang="en">Argument</source>
    </trans-unit>
    <trans-unit id="file">
      <source xml:lang="en">File</source>
    </trans-unit>
    <trans-unit id="flag">
      <source xml:lang="en">Flag</source>
    </trans-unit>
    <trans-unit id="folder">
      <source xml:lang="en">Folder</source>
    </trans-unit>
    <trans-unit id="inlineSuggestion">
      <source xml:lang="en">Inline Suggestion</source>
    </trans-unit>
    <trans-unit id="inlineSuggestionAlwaysOnTop">
      <source xml:lang="en">Inline Suggestion</source>
    </trans-unit>
    <trans-unit id="method">
      <source xml:lang="en">Method</source>
    </trans-unit>
    <trans-unit id="option">
      <source xml:lang="en">Option</source>
    </trans-unit>
    <trans-unit id="optionValue">
      <source xml:lang="en">Option Value</source>
    </trans-unit>
    <trans-unit id="symbolicLinkFile">
      <source xml:lang="en">Symbolic Link File</source>
    </trans-unit>
    <trans-unit id="symbolicLinkFolder">
      <source xml:lang="en">Symbolic Link Folder</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/suggest/browser/terminalSymbolIcons" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminalSymbolAliasIcon">
      <source xml:lang="en">Icon for aliases in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolArgumentIcon">
      <source xml:lang="en">Icon for arguments in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolFileIcon">
      <source xml:lang="en">Icon for files in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolFlagIcon">
      <source xml:lang="en">Icon for flags in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolFolderIcon">
      <source xml:lang="en">Icon for folders in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.aliasForeground">
      <source xml:lang="en">The foreground color for an alias icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.argumentForeground">
      <source xml:lang="en">The foreground color for an argument icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.enumMemberForeground">
      <source xml:lang="en">The foreground color for an enum member icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.fileForeground">
      <source xml:lang="en">The foreground color for a file icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.flagForeground">
      <source xml:lang="en">The foreground color for an flag icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.folderForeground">
      <source xml:lang="en">The foreground color for a folder icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.inlineSuggestionForeground">
      <source xml:lang="en">The foreground color for an inline suggestion icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.methodForeground">
      <source xml:lang="en">The foreground color for a method icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.optionForeground">
      <source xml:lang="en">The foreground color for an option icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.symbolicLinkFileForeground">
      <source xml:lang="en">The foreground color for a symbolic link file icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolIcon.symbolicLinkFolderForeground">
      <source xml:lang="en">The foreground color for a symbolic link folder icon. These icons will appear in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolInlineSuggestionIcon">
      <source xml:lang="en">Icon for inline suggestions in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolMethodIcon">
      <source xml:lang="en">Icon for methods in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolOptionIcon">
      <source xml:lang="en">Icon for options in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolOptionValue">
      <source xml:lang="en">Icon for enum members in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolSymbolicLinkFileIcon">
      <source xml:lang="en">Icon for symbolic link files in the terminal suggest widget.</source>
    </trans-unit>
    <trans-unit id="terminalSymbolSymbolicLinkFolderIcon">
      <source xml:lang="en">Icon for symbolic link folders in the terminal suggest widget.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/suggest/common/terminalSuggestConfiguration" source-language="en" datatype="plaintext"><body>
    <trans-unit id="runOnEnter.always">
      <source xml:lang="en">Always run on `Enter`.</source>
    </trans-unit>
    <trans-unit id="runOnEnter.exactMatch">
      <source xml:lang="en">Run on `Enter` when the suggestion is typed in its entirety.</source>
    </trans-unit>
    <trans-unit id="runOnEnter.exactMatchIgnoreExtension">
      <source xml:lang="en">Run on `Enter` when the suggestion is typed in its entirety or when a file is typed without its extension included.</source>
    </trans-unit>
    <trans-unit id="runOnEnter.never">
      <source xml:lang="en">Never run on `Enter`.</source>
    </trans-unit>
    <trans-unit id="suggest.cdPath">
      <source xml:lang="en">Controls whether to enable $CDPATH support which exposes children of the folders in the $CDPATH variable regardless of the current working directory. $CDPATH is expected to be semi colon-separated on Windows and colon-separated on other platforms.</source>
    </trans-unit>
    <trans-unit id="suggest.cdPath.absolute">
      <source xml:lang="en">Enable the feature and use absolute paths. This is useful when the shell doesn't natively support `$CDPATH`.</source>
    </trans-unit>
    <trans-unit id="suggest.cdPath.off">
      <source xml:lang="en">Disable the feature.</source>
    </trans-unit>
    <trans-unit id="suggest.cdPath.relative">
      <source xml:lang="en">Enable the feature and use relative paths.</source>
    </trans-unit>
    <trans-unit id="suggest.enabled">
      <source xml:lang="en">Enables terminal intellisense suggestions (preview) for supported shells ({0}) when {1} is set to {2}.

If shell integration is installed manually, {3} needs to be set to {4} before calling the shell integration script.</source>
    </trans-unit>
    <trans-unit id="suggest.inlineSuggestion">
      <source xml:lang="en">Controls whether the shell's inline suggestion should be detected and how it is scored.</source>
    </trans-unit>
    <trans-unit id="suggest.inlineSuggestion.alwaysOnTop">
      <source xml:lang="en">Enable the feature and always put the inline suggestion on top.</source>
    </trans-unit>
    <trans-unit id="suggest.inlineSuggestion.alwaysOnTopExceptExactMatch">
      <source xml:lang="en">Enable the feature and sort the inline suggestion without forcing it to be on top. This means that exact matches will be will be above the inline suggestion.</source>
    </trans-unit>
    <trans-unit id="suggest.inlineSuggestion.off">
      <source xml:lang="en">Disable the feature.</source>
    </trans-unit>
    <trans-unit id="suggest.providers">
      <source xml:lang="en">Providers are enabled by default. Omit them by setting the id of the provider to `false`.</source>
    </trans-unit>
    <trans-unit id="suggest.quickSuggestions">
      <source xml:lang="en">Controls whether suggestions should automatically show up while typing. Also be aware of the {0}-setting which controls if suggestions are triggered by special characters.</source>
    </trans-unit>
    <trans-unit id="suggest.quickSuggestions.arguments">
      <source xml:lang="en">Enable quick suggestions for arguments, anything after the first word in a command line input.</source>
    </trans-unit>
    <trans-unit id="suggest.quickSuggestions.commands">
      <source xml:lang="en">Enable quick suggestions for commands, the first word in a command line input.</source>
    </trans-unit>
    <trans-unit id="suggest.quickSuggestions.unknown">
      <source xml:lang="en">Enable quick suggestions when it's unclear what the best suggestion is, if this is on files and folders will be suggested as a fallback.</source>
    </trans-unit>
    <trans-unit id="suggest.runOnEnter">
      <source xml:lang="en">Controls whether suggestions should run immediately when `Enter` (not `Tab`) is used to accept the result.</source>
    </trans-unit>
    <trans-unit id="suggest.showStatusBar">
      <source xml:lang="en">Controls whether the terminal suggestions status bar should be shown.</source>
    </trans-unit>
    <trans-unit id="suggest.suggestOnTriggerCharacters">
      <source xml:lang="en">Controls whether suggestions should automatically show up when typing trigger characters.</source>
    </trans-unit>
    <trans-unit id="suggest.upArrowNavigatesHistory">
      <source xml:lang="en">Determines whether the up arrow key navigates the command history when focus is on the first suggestion and navigation has not yet occurred. When set to false, the up arrow will move focus to the last suggestion instead.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.selectionMode">
      <source xml:lang="en">Controls how suggestion selection works in the integrated terminal.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.selectionMode.always">
      <source xml:lang="en">Always select a suggestion when automatically triggering IntelliSense. `Enter` or `Tab` can be used to accept the first suggestion.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.selectionMode.never">
      <source xml:lang="en">Never select a suggestion when automatically triggering IntelliSense. The list must be navigated via `Down` before `Enter` or `Tab` can be used to accept the active suggestion.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.selectionMode.partial">
      <source xml:lang="en">Partially select a suggestion when automatically triggering IntelliSense. `Tab` can be used to accept the first suggestion, only after navigating the suggestions via `Down` will `Enter` also accept the active suggestion.</source>
    </trans-unit>
    <trans-unit id="terminalWindowsExecutableSuggestionSetting">
      <source xml:lang="en">A set of windows command executable extensions that will be included as suggestions in the terminal.

Many executables are included by default, listed below:

{0}.

To exclude an extension, set it to `false`

. To include one not in the list, add it and set it to `true`.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/typeAhead/common/terminalTypeAheadConfiguration" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.integrated.localEchoEnabled">
      <source xml:lang="en">When local echo should be enabled. This will override {0}</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.localEchoEnabled.auto">
      <source xml:lang="en">Enabled only for remote workspaces</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.localEchoEnabled.off">
      <source xml:lang="en">Always disabled</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.localEchoEnabled.on">
      <source xml:lang="en">Always enabled</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.localEchoExcludePrograms">
      <source xml:lang="en">Local echo will be disabled when any of these program names are found in the terminal title.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.localEchoLatencyThreshold">
      <source xml:lang="en">Length of network delay, in milliseconds, where local edits will be echoed on the terminal without waiting for server acknowledgement. If '0', local echo will always be on, and if '-1' it will be disabled.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.localEchoStyle">
      <source xml:lang="en">Terminal style of locally echoed text; either a font style or an RGB color.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/wslRecommendation/browser/terminal.wslRecommendation.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="install">
      <source xml:lang="en">Install</source>
    </trans-unit>
    <trans-unit id="useWslExtension.title">
      <source xml:lang="en">The '{0}' extension is recommended for opening a terminal in WSL.</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/zoom/browser/terminal.zoom.contribution" source-language="en" datatype="plaintext"><body>
    <trans-unit id="fontZoomIn">
      <source xml:lang="en">Increase Font Size</source>
    </trans-unit>
    <trans-unit id="fontZoomOut">
      <source xml:lang="en">Decrease Font Size</source>
    </trans-unit>
    <trans-unit id="fontZoomReset">
      <source xml:lang="en">Reset Font Size</source>
    </trans-unit>
</body></file>
  <file original="src/vs/workbench/contrib/terminalContrib/zoom/common/terminal.zoom" source-language="en" datatype="plaintext"><body>
    <trans-unit id="terminal.integrated.mouseWheelZoom">
      <source xml:lang="en">Zoom the font of the terminal when using mouse wheel and holding `Ctrl`.</source>
    </trans-unit>
    <trans-unit id="terminal.integrated.mouseWheelZoom.mac">
      <source xml:lang="en">Zoom the font of the terminal when using mouse wheel and holding `Cmd`.</source>
    </trans-unit>
</body></file>
</xliff>