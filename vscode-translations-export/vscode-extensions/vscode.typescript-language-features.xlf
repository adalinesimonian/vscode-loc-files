<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="extensions/vscode.typescript-language-features/bundle" source-language="en" datatype="plaintext"><body>
    <trans-unit id="++CODE++012bbb9a170b9a0eb11af4bda1287186470aee83e6e7c1e9d2a14b1b9cdc88be">
      <source xml:lang="en">(loading...)</source>
      <note>Prefix displayed for hover entries while the server is still loading</note>
    </trans-unit>
    <trans-unit id="++CODE++d3711f47b53cbbff701820ac079cd74e4ed557dcaa0755b975b8c016eb852efd">
      <source xml:lang="en">...1 additional file not shown</source>
    </trans-unit>
    <trans-unit id="++CODE++e75869fbe8b1c0131ba14d717b8b6d04e3e75a6f1c9d50f310f0a8c099f6fe57">
      <source xml:lang="en">...{0} additional files not shown</source>
    </trans-unit>
    <trans-unit id="++CODE++3da87c9c678d52e02a23f8c22b5175f2270626047c8cbf369ae4b4b79521c003">
      <source xml:lang="en">1 implementation</source>
    </trans-unit>
    <trans-unit id="++CODE++65c5f187273a6658a72e450db5937d87ec44e2776f984d8310d2ee932767b7ac">
      <source xml:lang="en">1 reference</source>
    </trans-unit>
    <trans-unit id="++CODE++6a43dc30384ef169516f430c1095d32a10116f8e7db05c02a615553e51e6a097">
      <source xml:lang="en">Acquiring typings definitions for IntelliSense.</source>
      <note>Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized</note>
    </trans-unit>
    <trans-unit id="++CODE++c72e8bce6830ebf885cf827b017d59bb9f5e181d237ca34e226d49c5deebe94b">
      <source xml:lang="en">Acquiring typings...</source>
      <note>Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized</note>
    </trans-unit>
    <trans-unit id="++CODE++c52481d39f2c491eb1c81e82b9e4f0c7290b66c909f620cde4877f60e9cc0b00">
      <source xml:lang="en">Add all missing imports</source>
    </trans-unit>
    <trans-unit id="++CODE++e213c161d5cefa520c8dd4155c9569076d9a40406111465136a6f1b207045761">
      <source xml:lang="en">Allow</source>
    </trans-unit>
    <trans-unit id="++CODE++de9f057a471cdb8d3b082719bdc7ad2031788d042947349723fa83c9d13a517a">
      <source xml:lang="en">Always</source>
    </trans-unit>
    <trans-unit id="++CODE++67e7251f0a24732ab54589f7ed22abc5570f9c6d6bb212b18b8796be462dda2f">
      <source xml:lang="en">An error occurred while renaming file</source>
    </trans-unit>
    <trans-unit id="++CODE++282e8d68d41e22e3f6e9e496603cf117970c778d61e4912dc15422ca1d9935a4">
      <source xml:lang="en">Analyzing &apos;{0}&apos; and its dependencies</source>
    </trans-unit>
    <trans-unit id="++CODE++35794235635df0a4831e18ea5c28fafa2e00732d5cd27f5c6f119eca43d850ba">
      <source xml:lang="en">Checking for update of JS/TS imports</source>
    </trans-unit>
    <trans-unit id="++CODE++cbcb53933ff9aee120c1c9baa0683ccfc2a5bdfbbcbf997f89f8fa56326ac1cc">
      <source xml:lang="en">Configure Excludes</source>
    </trans-unit>
    <trans-unit id="++CODE++ece2281bf1c6aa6a44a2f6d0db01d54df20d122febd06a9b6c4de29788fea236">
      <source xml:lang="en">Configure jsconfig</source>
    </trans-unit>
    <trans-unit id="++CODE++43bc64ba21e2947798577d509baf03323e3021d8f2aafe62e4f9fee3a96128e1">
      <source xml:lang="en">Configure jsconfig.json</source>
    </trans-unit>
    <trans-unit id="++CODE++e4393740f736c5ef0966b5c9b088f1dced8b6eb74bd03ecdb8f41a9fb2fc75b5">
      <source xml:lang="en">Configure tsconfig</source>
    </trans-unit>
    <trans-unit id="++CODE++e4702d76df5c5938e931b3ede1fb60eeb37afc54b0d67d330909446de452aac3">
      <source xml:lang="en">Configure tsconfig.json</source>
    </trans-unit>
    <trans-unit id="++CODE++2666d1141bb8027cedffc4b1de82c11ea236db16252ff2b70e43f19b4765d962">
      <source xml:lang="en">Could not apply refactoring</source>
    </trans-unit>
    <trans-unit id="++CODE++becff441caef1ee4447d8ae15cb8a1fba5229581afe166c0e0e5bb5c6f927c30">
      <source xml:lang="en">Could not detect a Node installation to run TS Server.</source>
    </trans-unit>
    <trans-unit id="++CODE++295c7803d7e7cd03f4b1fc41021eb60cb9944e794b4f9bf349a32e3633588a14">
      <source xml:lang="en">Could not determine TypeScript or JavaScript project</source>
    </trans-unit>
    <trans-unit id="++CODE++a30e44af37dc6d6ace810a84cf49c50bc5bcda2dea8e6276b45d1304cbbf153f">
      <source xml:lang="en">Could not determine TypeScript or JavaScript project. Unsupported file type</source>
    </trans-unit>
    <trans-unit id="++CODE++54f7822fa5072b5266cae29e5480dc51046ebd33e97ac193ae7a5683bea8c866">
      <source xml:lang="en">Could not determine references</source>
    </trans-unit>
    <trans-unit id="++CODE++7abab4ba4a654f142c352cd74b30383d4e23969985089f2d4c9dd67541d069ba">
      <source xml:lang="en">Could not install typings files for JavaScript language features. Please ensure that NPM is installed, or configure &apos;typescript.npm&apos; in your user settings. Alternatively, check the [documentation]({0}) to learn more.</source>
    </trans-unit>
    <trans-unit id="++CODE++704c9d9267270252092f44c7a1063371a9573338479612b4cfba8d3848a2922f">
      <source xml:lang="en">Could not load the TypeScript version at this path</source>
    </trans-unit>
    <trans-unit id="++CODE++6371b23e6b67bf59c1651877d670b3b2dc0c36015ab0b126a76c1b2cfa493c49">
      <source xml:lang="en">Could not open TS Server log file</source>
    </trans-unit>
    <trans-unit id="++CODE++b2583e537e75ae2e0febd8843fc57677b8873b91932461ee259c76706bb343c0">
      <source xml:lang="en">Disable logging</source>
    </trans-unit>
    <trans-unit id="++CODE++b2b600444647d6a397a015f15842b79e86be09871c1933884cf917c08e63be4f">
      <source xml:lang="en">Disables semantic checking in a JavaScript file. Must be at the top of a file.</source>
    </trans-unit>
    <trans-unit id="++CODE++48845bff334a50a59aaecf499f28a7a24c3b4b891b8b18a9f1169ad8e8a6b261">
      <source xml:lang="en">Dismiss</source>
    </trans-unit>
    <trans-unit id="++CODE++1d60d0cdcb5408b8e39ed364f675c9cad8a2f6174a413324d1e34437bd41269b">
      <source xml:lang="en">Don&apos;t Show Again</source>
    </trans-unit>
    <trans-unit id="++CODE++4e5374759acb5346cc22cfbece70ad33d2d775b391fe2d7655bdceebf3bb4a44">
      <source xml:lang="en">Don&apos;t show again</source>
    </trans-unit>
    <trans-unit id="++CODE++537f83711a07a3a71fe13aad559b5a7013defa268f2e3915744b1152b6e09fdd">
      <source xml:lang="en">Enable logging and restart TS server</source>
    </trans-unit>
    <trans-unit id="++CODE++913855a0116e510ff0644074f88e435a40f28985a75b60e8e1c03bd3bb4baee8">
      <source xml:lang="en">Enables semantic checking in a JavaScript file. Must be at the top of a file.</source>
    </trans-unit>
    <trans-unit id="++CODE++5a690a5e722b04ad4281333e49ed3a7ac40823d40746fb5c83a33201c237fbf5">
      <source xml:lang="en">Enter file path</source>
    </trans-unit>
    <trans-unit id="++CODE++6b6fcf25b399d82290af1b78af661483150a934c2f2441c438bdd913673f1d5d">
      <source xml:lang="en">Enter new file path...</source>
    </trans-unit>
    <trans-unit id="++CODE++52201b011a0a46c3866ce679df6d0203dbe52cffed0c925a4e0332de4d248da9">
      <source xml:lang="en">Extract to constant</source>
    </trans-unit>
    <trans-unit id="++CODE++0b6028c46b82af6e49f4eb65a8a51f0964adddd11dcf8595273b6d9909addf4a">
      <source xml:lang="en">Extract to function</source>
    </trans-unit>
    <trans-unit id="++CODE++917496459e7dc27e12593edf19f6ba106d09fc4d719b385996be96cec5bf8b12">
      <source xml:lang="en">Failed to resolve {0} as module</source>
    </trans-unit>
    <trans-unit id="++CODE++f8740b79b623bd32b6e702fb87896d08940925d928df3bffe44d7cdbc0127da2">
      <source xml:lang="en">Fetching data for better TypeScript IntelliSense</source>
    </trans-unit>
    <trans-unit id="++CODE++498d7064f7bc1af345ff329c069586b1ccb5ca0dc65ca244c3489382c687e712">
      <source xml:lang="en">File is not part of a JavaScript project. View the [jsconfig.json documentation]({0}) to learn more.</source>
    </trans-unit>
    <trans-unit id="++CODE++6e97ccaa07aca98f70e482a8eb8bd8acad3ede36a0d7c404c77aa9638b15410f">
      <source xml:lang="en">File is not part of a TypeScript project. View the [tsconfig.json documentation]({0}) to learn more.</source>
    </trans-unit>
    <trans-unit id="++CODE++ce0fe8763c0f93bd2885ba055576eb87b48ef88019b16d83435eb887aab31339">
      <source xml:lang="en">File is not part opened folders</source>
    </trans-unit>
    <trans-unit id="++CODE++074accffb3bf7b6e0810bc93a321f7ab2867abd9e1569ea114914c0fabc33112">
      <source xml:lang="en">Find file references failed. No resource provided.</source>
    </trans-unit>
    <trans-unit id="++CODE++771c397498f7dba74693cecfb53dd96da849877ad7c9a5eec7ac23db2ca1b7df">
      <source xml:lang="en">Find file references failed. Requires TypeScript 4.2+.</source>
    </trans-unit>
    <trans-unit id="++CODE++b51ba549d6cbe77eb273b252959c4cb334e8b39a9e7c902a171e6ad819c823a3">
      <source xml:lang="en">Find file references failed. Unknown file type.</source>
    </trans-unit>
    <trans-unit id="++CODE++39d404c29258162648f3d8b9ec99d9d493eabe74eeb58267eaf60f6a30b05644">
      <source xml:lang="en">Find file references failed. Unsupported file type.</source>
    </trans-unit>
    <trans-unit id="++CODE++99ba1e8ef633bbdbdcb59fa90ded44154f3fd1e1e4d7166c45d2f759ef5bef77">
      <source xml:lang="en">Finding file references</source>
    </trans-unit>
    <trans-unit id="++CODE++d1309d9be9de14c0738089c27a185c121a42da8ec493c751520a4e2191c1d23b">
      <source xml:lang="en">Finding source definitions</source>
    </trans-unit>
    <trans-unit id="++CODE++26804638dad4fa7f7bc3ca47cd4b06ac5f5c98ccf93a5c0dfc01355083ad3f66">
      <source xml:lang="en">Fix all fixable JS/TS issues</source>
    </trans-unit>
    <trans-unit id="++CODE++773c6c3aafa8c9f58eea260fe7d5dedc52b3068c2e947a47683a088bd23a03d4">
      <source xml:lang="en">Follow link</source>
    </trans-unit>
    <trans-unit id="++CODE++a29a8ef37333f806fc5f9076b288f5ac22b295b81461cdc43ea6c738897e26ae">
      <source xml:lang="en">Go to Source Definition failed. No resource provided.</source>
    </trans-unit>
    <trans-unit id="++CODE++b2feadbb4a2882a5fb2cea3f4bcd2c52415ab7e7417e0c79f5961c64365cf928">
      <source xml:lang="en">Go to Source Definition failed. Requires TypeScript 4.7+.</source>
    </trans-unit>
    <trans-unit id="++CODE++8f01bea5ce7a7eb0ebe0f4bee973941d0095a0d5c770972efb965ddb99ac771e">
      <source xml:lang="en">Go to Source Definition failed. Unknown file type.</source>
    </trans-unit>
    <trans-unit id="++CODE++7db02cfc2c17db1dfb572dbfdb173acd14ef78ee7425ca53a83d8e26edbe2d7d">
      <source xml:lang="en">Go to Source Definition failed. Unsupported file type.</source>
    </trans-unit>
    <trans-unit id="++CODE++e2ca755eccdc287ca2c74b86e9a33a06671c11cd9dda1c69de2d2b47a9a14e0d">
      <source xml:lang="en">Initializing &apos;{0}&apos;</source>
    </trans-unit>
    <trans-unit id="++CODE++00288f01741225c3ff00094bacb6455d996af76613ea2511ea445f0e58baf524">
      <source xml:lang="en">JS/TS IntelliSense Status</source>
    </trans-unit>
    <trans-unit id="++CODE++0bf93b633f33a36c8e50f78e11dffd62a8e32a606364e60f10d0e6725e64f06b">
      <source xml:lang="en">JSDoc comment</source>
    </trans-unit>
    <trans-unit id="++CODE++8d8cd546b58d91c300d3149ef40b8d98d3061dc38f15ea937d2ed785a3f25771">
      <source xml:lang="en">Learn More</source>
    </trans-unit>
    <trans-unit id="++CODE++87432d306e7ece18dedf1d712f6771421ce9052e74c1e3c50c5a803170333567">
      <source xml:lang="en">Learn more about JS/TS refactorings</source>
    </trans-unit>
    <trans-unit id="++CODE++b13879b55aeeb667ef7f700158776edd7c6b0e7707e88c373dda8a18205877d2">
      <source xml:lang="en">Learn more about managing TypeScript versions</source>
    </trans-unit>
    <trans-unit id="++CODE++00b633b87b1d606f82e52077e5f82b1c7fe9de7660d0a954f07f43fc35eec62a">
      <source xml:lang="en">Loading IntelliSense status</source>
    </trans-unit>
    <trans-unit id="++CODE++f498bdd33d192a2654b223f4515643c2f3615a277dc9f8ed92dca1eeb31de725">
      <source xml:lang="en">Move to File</source>
    </trans-unit>
    <trans-unit id="++CODE++6300ef800bb884295b0b4b35682b75cecd7cc550d202db56d04a0643b8fb873f">
      <source xml:lang="en">Never</source>
    </trans-unit>
    <trans-unit id="++CODE++cf15925d522f2af72fc34f65786bfe06438043149d60918be1fda8d4faa3cdd9">
      <source xml:lang="en">Never in this Workspace</source>
    </trans-unit>
    <trans-unit id="++CODE++1ea442a134b2a184bd5d40104401f2a37fbc09ccf3f4bc9da161c6099be3691d">
      <source xml:lang="en">No</source>
    </trans-unit>
    <trans-unit id="++CODE++da6819db3628c01f3d24be26ba764568c184f1e1e74100c77277fec38cf11b75">
      <source xml:lang="en">No jsconfig</source>
    </trans-unit>
    <trans-unit id="++CODE++98961582c15a3efc7911b1001bc08733e243fdf7374b8cad608358f331653531">
      <source xml:lang="en">No opened folders</source>
    </trans-unit>
    <trans-unit id="++CODE++a111df6bad92ea2f0285c50ff27e121acffcfc0d99e15e1a7c82130e47eb7b58">
      <source xml:lang="en">No source definitions found.</source>
    </trans-unit>
    <trans-unit id="++CODE++ae3db19da101521906958af547ec5fea064acdcf53701c42767688eacb9b3466">
      <source xml:lang="en">No tsconfig</source>
    </trans-unit>
    <trans-unit id="++CODE++a0e63d7c7125d29af84d6919af5550529be77c327324940c98c4b2cb13a99c8c">
      <source xml:lang="en">Not now</source>
    </trans-unit>
    <trans-unit id="++CODE++80dd2dabefef7af055979f6f608eab430c966118632b1db8461bf6841690283d">
      <source xml:lang="en">Open config file</source>
    </trans-unit>
    <trans-unit id="++CODE++5d40b1f86b7c14ffbe79c4e326d1ca14ad35225cce6bef125f243202a3ac00d1">
      <source xml:lang="en">Organize Imports</source>
    </trans-unit>
    <trans-unit id="++CODE++2610ee4b41f72f6c210cd0acaa396a650554bfd2dd394ff13f4dfd19c61fbfb1">
      <source xml:lang="en">Partial Mode</source>
    </trans-unit>
    <trans-unit id="++CODE++8b61433590af70da480d73e9f40dbedb98f53ec1bc7a37f4b2613e7f31064e56">
      <source xml:lang="en">Paste with imports</source>
    </trans-unit>
    <trans-unit id="++CODE++d21baf67ea2cd8c6d1aab1bda6e429ddbcfe58e0db246ccc6a538bfdc2d71d9d">
      <source xml:lang="en">Please open a folder in VS Code to use a TypeScript or JavaScript project</source>
    </trans-unit>
    <trans-unit id="++CODE++cf42f2d7821fd8b5b3a955758a1783a90fb10a198e2f03ba8172abcce516b783">
      <source xml:lang="en">Please report an issue against Yarn PnP</source>
    </trans-unit>
    <trans-unit id="++CODE++40adb68c1cd54660716374c6bd000a3ebcf4af8f16b04781953b0cd66544aa87">
      <source xml:lang="en">Please update your TypeScript version</source>
    </trans-unit>
    <trans-unit id="++CODE++09fa8cde0050cb69e4168b6421a0954c5fac24d24529e475162ce53015b47079">
      <source xml:lang="en">Project Wide IntelliSense not available</source>
    </trans-unit>
    <trans-unit id="++CODE++1a58e5284053a769896d58e7ba836f33c1c903cb20d1f5fc21da914b9714ff5f">
      <source xml:lang="en">Remove Unused Imports</source>
    </trans-unit>
    <trans-unit id="++CODE++99bf1dcb6dc8e07e84b9aecba57bbccbf388228aa278584567a1739c6f5626c8">
      <source xml:lang="en">Remove all unused code</source>
    </trans-unit>
    <trans-unit id="++CODE++653f005a60724912916a58829d3b7e40fa138ae0872c380f2b5dd0d330840997">
      <source xml:lang="en">Report Issue</source>
    </trans-unit>
    <trans-unit id="++CODE++f5868a7f0144341e82abc276ae7fcaeaa5219a5f28b8cb3710d476bea287dfc0">
      <source xml:lang="en">Report issue against Yarn PnP</source>
    </trans-unit>
    <trans-unit id="++CODE++6ae46849bda95f4fa817885862a58b38edd3e337bc24d94d9cfd8ddb2ea00bc0">
      <source xml:lang="en">Select Version</source>
    </trans-unit>
    <trans-unit id="++CODE++76a2fbdb3f8efb23e5033d3eebcc629adeadaf17b738cf3326eaa6551ec49639">
      <source xml:lang="en">Select code action to apply</source>
    </trans-unit>
    <trans-unit id="++CODE++f7a227c85c0b32cbf72b2cba0d41c2f6486f2bc73460fc4d4b7c33c03337fece">
      <source xml:lang="en">Select existing file...</source>
    </trans-unit>
    <trans-unit id="++CODE++9eced3a624952d9fe5453127841ddc931b50627d2c08347da75468f94c1a733d">
      <source xml:lang="en">Select move destination</source>
    </trans-unit>
    <trans-unit id="++CODE++95cf2447e6ea199ce57d411d85fc8bd67b75f2ef1e268e6d7045d4ab6e8eca9e">
      <source xml:lang="en">Select the TypeScript version used for JavaScript and TypeScript language features</source>
    </trans-unit>
    <trans-unit id="++CODE++aaf69eb0e5cd835944acea08084a75a0cd184e47be5073994ab7390c2edc3cb9">
      <source xml:lang="en">Sort Imports</source>
    </trans-unit>
    <trans-unit id="++CODE++8b739b8e8c6ab7de44064c98f650ffdd601b31c10783375a33e70ca96c24f526">
      <source xml:lang="en">Suppresses @ts-check errors on the next line of a file, expecting at least one to exist.</source>
    </trans-unit>
    <trans-unit id="++CODE++70bc285903bd9ce273f6bc71eb23d9ada450bc9f97418be89ea3b443753eabb1">
      <source xml:lang="en">Suppresses @ts-check errors on the next line of a file.</source>
    </trans-unit>
    <trans-unit id="++CODE++cc2c51353932e501c4ca373fc6ec512106f15c68d7c25c08675f0fbc5a02310c">
      <source xml:lang="en">TS Server has not started logging.</source>
    </trans-unit>
    <trans-unit id="++CODE++1e32e5d3b54f26c23592c471d672beb47c5d95a8a6946fdf17dd486c77320284">
      <source xml:lang="en">TS Server logging is currently enabled which may impact performance.</source>
    </trans-unit>
    <trans-unit id="++CODE++00edef43b793884c746a58b028731f392d3c59b7b32ccde6bc676d4f3e865a99">
      <source xml:lang="en">TS Server logging is off. Please set &apos;typescript.tsserver.log&apos; and restart the TS server to enable logging</source>
    </trans-unit>
    <trans-unit id="++CODE++fab6a7ed1ed9b87eec1851d4397bc0c0da3050fd4e18467a8d0a7b4fe1eb85ea">
      <source xml:lang="en">The JS/TS language service crashed 5 times in the last 5 Minutes.</source>
    </trans-unit>
    <trans-unit id="++CODE++66027bbda0a342675b70624b30e7b9cba8600ae5a8f7494eb0081fa4f820db90">
      <source xml:lang="en">The JS/TS language service crashed 5 times in the last 5 Minutes.&#10;This may be caused by a plugin contributed by one of these extensions: {0}&#10;Please try disabling these extensions before filing an issue against VS Code.</source>
    </trans-unit>
    <trans-unit id="++CODE++c248aa51509819abb988df148ad29b0dc6a9787b3e440733d9a89d0877a630f7">
      <source xml:lang="en">The JS/TS language service crashed.</source>
    </trans-unit>
    <trans-unit id="++CODE++e0faf0329e1fd443d7872be17d971a3b40df4cfd14ea697b445446376bc02fda">
      <source xml:lang="en">The JS/TS language service crashed.&#10;This may be caused by a plugin contributed by one of these extensions: {0}.&#10;Please try disabling these extensions before filing an issue against VS Code.</source>
    </trans-unit>
    <trans-unit id="++CODE++17666535ebf86614a3081cbd6f6e3f43d75e71cc8091405c22c2d9563610466b">
      <source xml:lang="en">The JS/TS language service immediately crashed 5 times. The service will not be restarted.</source>
    </trans-unit>
    <trans-unit id="++CODE++1bee642f6b81661485922334f80ec8755bedd6b1fb8cc88fd15c3fd04a1172f4">
      <source xml:lang="en">The JS/TS language service immediately crashed 5 times. The service will not be restarted.&#10;This may be caused by a plugin contributed by one of these extensions: {0}.&#10;Please try disabling these extensions before filing an issue against VS Code.</source>
    </trans-unit>
    <trans-unit id="++CODE++db560cf2114ff87b85623ee5375a8f83059098968a27572f492b18a9c494ba46">
      <source xml:lang="en">The current selection cannot be extracted</source>
    </trans-unit>
    <trans-unit id="++CODE++79dd57bc09ff37c15d35fa51ebae790240f6198d45a25651e125b3d5fcfbda09">
      <source xml:lang="en">The path {0} doesn&apos;t point to a valid Node installation to run TS Server. Falling back to bundled Node.</source>
    </trans-unit>
    <trans-unit id="++CODE++11bd7eb7b98d0706f310da4cae21f00e55b6c3726a421676dcc08e3a122d9ae5">
      <source xml:lang="en">The path {0} doesn&apos;t point to a valid tsserver install. Falling back to bundled TypeScript version.</source>
    </trans-unit>
    <trans-unit id="++CODE++513768bb4385063ca9abaa1c95bdd6174cdf4136ab73d997bfa59a8e1d678455">
      <source xml:lang="en">The workspace is using a version of the TypeScript Server that has been patched by Yarn PnP. This patching is a common source of bugs.</source>
    </trans-unit>
    <trans-unit id="++CODE++98c06d273886baed7095754d9519fbc1cbcc090bf772d279bc6bdf2b4de2141a">
      <source xml:lang="en">The workspace is using an old version of TypeScript ({0}).&#10;&#10;Before reporting an issue, please update the workspace to use TypeScript {1} or newer to make sure the bug has not already been fixed.</source>
    </trans-unit>
    <trans-unit id="++CODE++a78c926c7fa2e923bb29f60b37f0eea0e8d7d4f7d452ea861e2d6634bedd611b">
      <source xml:lang="en">This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?</source>
    </trans-unit>
    <trans-unit id="++CODE++e9cb3b27939c312865393da3cfb28e7e94a7515f8f4e2fc2e9f706fb057eeb0f">
      <source xml:lang="en">This workspace wants to use the Node installation at &apos;{0}&apos; to run TS Server. Would you like to use it?</source>
    </trans-unit>
    <trans-unit id="++CODE++1f0f9b85b3a4687eebd06776b3b0405f0b6f2a1c22f769dd6b7ee0627a568d5c">
      <source xml:lang="en">To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}</source>
    </trans-unit>
    <trans-unit id="++CODE++f7208a0481001f45bba41f9033b238421e9b1a5db356c864db3d9585c32740c5">
      <source xml:lang="en">To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.</source>
    </trans-unit>
    <trans-unit id="++CODE++017d70fbcbf87e8aa65e2563f7ee58ff2337156a965a4141fb6595cb6799ff70">
      <source xml:lang="en">TypeScript Server Log</source>
    </trans-unit>
    <trans-unit id="++CODE++290642babb3e3db5a4a483a1f0bb040298db0c7df9a319323c2ca5c624253a5a">
      <source xml:lang="en">TypeScript Task in tasks.json contains &quot;\\&quot;. TypeScript tasks tsconfig must use &quot;/&quot;</source>
    </trans-unit>
    <trans-unit id="++CODE++4c2350f2dbce544e0c16436f7b19b90dcf5a4aa116630232c5c0948a26effb4e">
      <source xml:lang="en">TypeScript Version</source>
    </trans-unit>
    <trans-unit id="++CODE++63b732ffe5d40e33ab4ca8cfc5518795028dc734d1eff0c6e3b26e57b6ed1508">
      <source xml:lang="en">TypeScript language server exited with error. Error message is: {0}</source>
    </trans-unit>
    <trans-unit id="++CODE++286df8bff4cff50d071bfa3d6d5d3bb6a548a179fd8b3f4d33adfe1ba3357f70">
      <source xml:lang="en">TypeScript: Configure Excludes</source>
    </trans-unit>
    <trans-unit id="++CODE++e41fbf91e51675671a6dea301e76b3db8a1da6faf72a73ee7c2e931bf4772a11">
      <source xml:lang="en">Update imports for &apos;{0}&apos;?</source>
    </trans-unit>
    <trans-unit id="++CODE++c959c280f828e1598d8e796076878d7a2dde9875a4287f6032c45fa13bcede2b">
      <source xml:lang="en">Update imports for the following {0} files?</source>
    </trans-unit>
    <trans-unit id="++CODE++a48ad4c858751b66d827e6ed1f2a1974a660e1042c70da87b2f1278fb37edd73">
      <source xml:lang="en">Use VS Code&apos;s Version</source>
    </trans-unit>
    <trans-unit id="++CODE++ff1ce5c617c474d55bbb1b87c60463aa57787ad4ebc26d0714b067db841826e5">
      <source xml:lang="en">Use Workspace Version</source>
    </trans-unit>
    <trans-unit id="++CODE++5cc39c6d1762eef8d005bbf913094e314ad3958e7e01de9706bac37ba51bac09">
      <source xml:lang="en">VS Code&apos;s tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code.</source>
    </trans-unit>
    <trans-unit id="++CODE++85a39ab345d672ff8ca9b9c6876f3adcacf45ee7c1e2dbd2408fd338bd55e07e">
      <source xml:lang="en">Yes</source>
    </trans-unit>
    <trans-unit id="++CODE++c6dfea7025e71ace1d9bd83bf31138420354c2e14145de2da6fd488a274a10d8">
      <source xml:lang="en">build - {0}</source>
    </trans-unit>
    <trans-unit id="++CODE++6aeb50de41ca7956419663f388c9b1098352e3ca2e3937bc9a435d2a03022ea8">
      <source xml:lang="en">destination files</source>
    </trans-unit>
    <trans-unit id="++CODE++abb0efe95296c1a5009db15d861e7e5c48fc96b5bcfa34f465d2cf94cdf9b4e2">
      <source xml:lang="en">invalid version</source>
    </trans-unit>
    <trans-unit id="++CODE++eee3a126e7c77f0a50493399f57015ea55f1f0c3123108b303159746aef1393e">
      <source xml:lang="en">watch - {0}</source>
    </trans-unit>
    <trans-unit id="++CODE++87014d5cb51025382be45cb80c1e9934af6ced88aefc63f3c07de2469ae1db0a">
      <source xml:lang="en">{0} (Fix all in file)</source>
    </trans-unit>
    <trans-unit id="++CODE++07a140471f1ca9a4e89f4caa561173677eb133d17b8181889f3c3ce1c2b45a59">
      <source xml:lang="en">{0} implementations</source>
    </trans-unit>
    <trans-unit id="++CODE++5f18beb7414fce49ba98e82211c9d20698214f3d58ac672865cbee7cada1edf2">
      <source xml:lang="en">{0} references</source>
    </trans-unit>
  </body></file>
  <file original="extensions/vscode.typescript-language-features/package" source-language="en" datatype="plaintext"><body>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.label.js">
      <source xml:lang="en">.js / .ts</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.pluginPaths">
      <source xml:lang="en">Additional paths to discover TypeScript Language Service plugins.</source>
    </trans-unit>
    <trans-unit id="javascript.preferences.organizeImports">
      <source xml:lang="en">Advanced preferences that control how imports are ordered.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports">
      <source xml:lang="en">Advanced preferences that control how imports are ordered.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.includePackageJsonAutoImports.on">
      <source xml:lang="en">Always search dependencies.</source>
    </trans-unit>
    <trans-unit id="typescript.updateImportsOnFileMove.enabled.always">
      <source xml:lang="en">Always update paths automatically.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.quoteStyle.double">
      <source xml:lang="en">Always use double quotes: `&quot;`</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.quoteStyle.single">
      <source xml:lang="en">Always use single quotes: `&apos;`</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.useFsEvents">
      <source xml:lang="en">Attempt to use the operating system/file system&apos;s native events for directory changes.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.useFsEvents">
      <source xml:lang="en">Attempt to use the operating system/file system&apos;s native events for file changes.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory">
      <source xml:lang="en">Attempt to use the operating system/file system&apos;s native events to listen for changes on a file&apos;s containing directories. This can use fewer file watchers, but might be less accurate.</source>
    </trans-unit>
    <trans-unit id="configuration.updateImportsOnPaste">
      <source xml:lang="en">Automatically update imports when pasting code. Requires TypeScript 5.6+.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval">
      <source xml:lang="en">Check every directory for changes several times a second at a fixed interval.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval">
      <source xml:lang="en">Check every file for changes several times a second at a fixed interval.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.fixedPollingInterval">
      <source xml:lang="en">Check every file for changes several times a second at a fixed interval.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval">
      <source xml:lang="en">Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.priorityPollingInterval">
      <source xml:lang="en">Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.</source>
    </trans-unit>
    <trans-unit id="typescript.check.npmIsInstalled">
      <source xml:lang="en">Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.completeFunctionCalls">
      <source xml:lang="en">Complete functions with their parameter signature.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions">
      <source xml:lang="en">Configure which watching strategies should be used to keep track of files and directories.</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect">
      <source xml:lang="en">Controls auto detection of tsc tasks.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useSyntaxServer">
      <source xml:lang="en">Controls if TypeScript launches a dedicated server to more quickly handle syntax related operations, such as computing code folding.</source>
    </trans-unit>
    <trans-unit id="typescript.workspaceSymbols.scope">
      <source xml:lang="en">Controls which files are searched by [Go to Symbol in Workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.makeJsFile.title">
      <source xml:lang="en">Create a JavaScript File</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect.on">
      <source xml:lang="en">Create both build and watch tasks.</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.debugJsFile.altText">
      <source xml:lang="en">Debug and run your JavaScript code in Node.js with Visual Studio Code.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.caseFirst.default">
      <source xml:lang="en">Default order given by `locale`.</source>
    </trans-unit>
    <trans-unit id="format.semicolons">
      <source xml:lang="en">Defines handling of optional semicolons.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceBeforeAndAfterBinaryOperators">
      <source xml:lang="en">Defines space handling after a binary operator.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterCommaDelimiter">
      <source xml:lang="en">Defines space handling after a comma delimiter.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterSemicolonInForStatements">
      <source xml:lang="en">Defines space handling after a semicolon in a for statement.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterFunctionKeywordForAnonymousFunctions">
      <source xml:lang="en">Defines space handling after function keyword for anonymous functions.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterKeywordsInControlFlowStatements">
      <source xml:lang="en">Defines space handling after keywords in a control flow statement.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces">
      <source xml:lang="en">Defines space handling after opening and before closing JSX expression braces.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces">
      <source xml:lang="en">Defines space handling after opening and before closing empty braces.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces">
      <source xml:lang="en">Defines space handling after opening and before closing non-empty braces.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets">
      <source xml:lang="en">Defines space handling after opening and before closing non-empty brackets.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis">
      <source xml:lang="en">Defines space handling after opening and before closing non-empty parenthesis.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces">
      <source xml:lang="en">Defines space handling after opening and before closing template string braces.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterConstructor">
      <source xml:lang="en">Defines space handling after the constructor keyword.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterTypeAssertion">
      <source xml:lang="en">Defines space handling after type assertions in TypeScript.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceBeforeFunctionParenthesis">
      <source xml:lang="en">Defines space handling before function argument parentheses.</source>
    </trans-unit>
    <trans-unit id="format.placeOpenBraceOnNewLineForControlBlocks">
      <source xml:lang="en">Defines whether an open brace is put onto a new line for control blocks or not.</source>
    </trans-unit>
    <trans-unit id="format.placeOpenBraceOnNewLineForFunctions">
      <source xml:lang="en">Defines whether an open brace is put onto a new line for functions or not.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.caseSensitivity.auto">
      <source xml:lang="en">Detect case-sensitivity for import sorting.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.typeOrder.auto">
      <source xml:lang="en">Detect where type-only named imports should be sorted.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.synchronousWatchDirectory">
      <source xml:lang="en">Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups.</source>
    </trans-unit>
    <trans-unit id="inlayHints.parameterNames.none">
      <source xml:lang="en">Disable parameter name hints.</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect.off">
      <source xml:lang="en">Disable this feature.</source>
    </trans-unit>
    <trans-unit id="typescript.disableAutomaticTypeAcquisition">
      <source xml:lang="en">Disables [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.js">
      <source xml:lang="en">Do not shorten path endings; include the `.js` or `.ts` extension.</source>
    </trans-unit>
    <trans-unit id="format.semicolons.ignore">
      <source xml:lang="en">Don&apos;t insert or remove any semicolons.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useSyntaxServer.never">
      <source xml:lang="en">Don&apos;t use a dedicated syntax server. Use a single server to handle all IntelliSense operations.</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.pluginPaths.item">
      <source xml:lang="en">Either an absolute or relative path. Relative path will be resolved against workspace folder(s).</source>
    </trans-unit>
    <trans-unit id="inlayHints.parameterNames.all">
      <source xml:lang="en">Enable parameter name hints for literal and non-literal arguments.</source>
    </trans-unit>
    <trans-unit id="inlayHints.parameterNames.literals">
      <source xml:lang="en">Enable parameter name hints only for literal arguments.</source>
    </trans-unit>
    <trans-unit id="javascript.validate.enable">
      <source xml:lang="en">Enable/disable JavaScript validation.</source>
    </trans-unit>
    <trans-unit id="typescript.validate.enable">
      <source xml:lang="en">Enable/disable TypeScript validation.</source>
    </trans-unit>
    <trans-unit id="configuration.implicitProjectConfig.strictFunctionTypes">
      <source xml:lang="en">Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.</source>
    </trans-unit>
    <trans-unit id="configuration.implicitProjectConfig.strictNullChecks">
      <source xml:lang="en">Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.</source>
    </trans-unit>
    <trans-unit id="configuration.implicitProjectConfig.experimentalDecorators">
      <source xml:lang="en">Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.autoImports">
      <source xml:lang="en">Enable/disable auto import suggestions.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.includeCompletionsForImportStatements">
      <source xml:lang="en">Enable/disable auto-import-style completions on partially-typed import statements.</source>
    </trans-unit>
    <trans-unit id="typescript.autoClosingTags">
      <source xml:lang="en">Enable/disable automatic closing of JSX tags.</source>
    </trans-unit>
    <trans-unit id="typescript.updateImportsOnFileMove.enabled">
      <source xml:lang="en">Enable/disable automatic updating of import paths when you rename or move a file in VS Code.</source>
    </trans-unit>
    <trans-unit id="javascript.format.enable">
      <source xml:lang="en">Enable/disable default JavaScript formatter.</source>
    </trans-unit>
    <trans-unit id="typescript.format.enable">
      <source xml:lang="en">Enable/disable default TypeScript formatter.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.jsdoc.generateReturns">
      <source xml:lang="en">Enable/disable generating `@returns` annotations for JSDoc templates.</source>
    </trans-unit>
    <trans-unit id="typescript.implementationsCodeLens.showOnInterfaceMethods">
      <source xml:lang="en">Enable/disable implementations CodeLens on interface methods.</source>
    </trans-unit>
    <trans-unit id="typescript.implementationsCodeLens.enabled">
      <source xml:lang="en">Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.names">
      <source xml:lang="en">Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.</source>
    </trans-unit>
    <trans-unit id="configuration.inlayHints.parameterTypes.enabled">
      <source xml:lang="en">Enable/disable inlay hints for implicit parameter types:&#10;```typescript&#10;&#10;el.addEventListener(&apos;click&apos;, e /* :MouseEvent */ =&gt; ...)&#10; &#10;```</source>
      <note>The text inside the ``` block is code and should not be localized.</note>
    </trans-unit>
    <trans-unit id="configuration.inlayHints.functionLikeReturnTypes.enabled">
      <source xml:lang="en">Enable/disable inlay hints for implicit return types on function signatures:&#10;```typescript&#10;&#10;function foo() /* :number */ {&#10;	return Date.now();&#10;} &#10; &#10;```</source>
      <note>The text inside the ``` block is code and should not be localized.</note>
    </trans-unit>
    <trans-unit id="configuration.inlayHints.propertyDeclarationTypes.enabled">
      <source xml:lang="en">Enable/disable inlay hints for implicit types on property declarations:&#10;```typescript&#10;&#10;class Foo {&#10;	prop /* :number */ = Date.now();&#10;}&#10; &#10;```</source>
      <note>The text inside the ``` block is code and should not be localized.</note>
    </trans-unit>
    <trans-unit id="configuration.inlayHints.variableTypes.enabled">
      <source xml:lang="en">Enable/disable inlay hints for implicit variable types:&#10;```typescript&#10;&#10;const foo /* :number */ = Date.now();&#10; &#10;```</source>
      <note>The text inside the ``` block is code and should not be localized.</note>
    </trans-unit>
    <trans-unit id="configuration.inlayHints.enumMemberValues.enabled">
      <source xml:lang="en">Enable/disable inlay hints for member values in enum declarations:&#10;```typescript&#10;&#10;enum MyValue {&#10;	A /* = 0 */;&#10;	B /* = 1 */;&#10;}&#10; &#10;```</source>
      <note>The text inside the ``` block is code and should not be localized.</note>
    </trans-unit>
    <trans-unit id="configuration.inlayHints.parameterNames.enabled">
      <source xml:lang="en">Enable/disable inlay hints for parameter names:&#10;```typescript&#10;&#10;parseInt(/* str: */ &apos;123&apos;, /* radix: */ 8)&#10; &#10;```</source>
      <note>The text inside the ``` block is code and should not be localized.</note>
    </trans-unit>
    <trans-unit id="typescript.preferences.useAliasesForRenames">
      <source xml:lang="en">Enable/disable introducing aliases for object shorthand properties during renames.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.web.typeAcquisition.enabled">
      <source xml:lang="en">Enable/disable package acquisition on the web. This enables IntelliSense for imported packages. Requires `#typescript.tsserver.web.projectWideIntellisense.enabled#`. Currently not supported for Safari.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.web.projectWideIntellisense.enabled">
      <source xml:lang="en">Enable/disable project-wide IntelliSense on web. Requires that VS Code is running in a trusted context.</source>
    </trans-unit>
    <trans-unit id="javascript.referencesCodeLens.enabled">
      <source xml:lang="en">Enable/disable references CodeLens in JavaScript files.</source>
    </trans-unit>
    <trans-unit id="typescript.referencesCodeLens.enabled">
      <source xml:lang="en">Enable/disable references CodeLens in TypeScript files.</source>
    </trans-unit>
    <trans-unit id="javascript.referencesCodeLens.showOnAllFunctions">
      <source xml:lang="en">Enable/disable references CodeLens on all functions in JavaScript files.</source>
    </trans-unit>
    <trans-unit id="typescript.referencesCodeLens.showOnAllFunctions">
      <source xml:lang="en">Enable/disable references CodeLens on all functions in TypeScript files.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.includePackageJsonAutoImports">
      <source xml:lang="en">Enable/disable searching `package.json` dependencies for available auto imports.</source>
    </trans-unit>
    <trans-unit id="configuration.implicitProjectConfig.checkJs">
      <source xml:lang="en">Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.includeAutomaticOptionalChainCompletions">
      <source xml:lang="en">Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.classMemberSnippets.enabled">
      <source xml:lang="en">Enable/disable snippet completions for class members.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.objectLiteralMethodSnippets.enabled">
      <source xml:lang="en">Enable/disable snippet completions for methods in object literals.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useSeparateSyntaxServer">
      <source xml:lang="en">Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols.</source>
    </trans-unit>
    <trans-unit id="javascript.suggestionActions.enabled">
      <source xml:lang="en">Enable/disable suggestion diagnostics for JavaScript files in the editor.</source>
    </trans-unit>
    <trans-unit id="typescript.suggestionActions.enabled">
      <source xml:lang="en">Enable/disable suggestion diagnostics for TypeScript files in the editor.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.completeJSDocs">
      <source xml:lang="en">Enable/disable suggestion to complete JSDoc comments.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.paths">
      <source xml:lang="en">Enable/disable suggestions for paths in import statements and require calls.</source>
    </trans-unit>
    <trans-unit id="typescript.suggest.enabled">
      <source xml:lang="en">Enabled/disable autocomplete suggestions.</source>
    </trans-unit>
    <trans-unit id="configuration.surveys.enabled">
      <source xml:lang="en">Enabled/disable occasional surveys that help us improve VS Code&apos;s JavaScript and TypeScript support.</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.log">
      <source xml:lang="en">Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.experimental.enableProjectDiagnostics">
      <source xml:lang="en">Enables project wide error reporting.</source>
    </trans-unit>
    <trans-unit id="typescript.enablePromptUseWorkspaceTsdk">
      <source xml:lang="en">Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.enableRegionDiagnostics">
      <source xml:lang="en">Enables region-based diagnostics in TypeScript. Requires using TypeScript 5.6+ in the workspace.</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.enableTracing">
      <source xml:lang="en">Enables tracing TS server performance to a directory. These trace files can be used to diagnose TS Server performance issues. The log may contain file paths, source code, and other potentially sensitive information from your project.</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.trace">
      <source xml:lang="en">Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.</source>
    </trans-unit>
    <trans-unit id="typescript.workspaceSymbols.excludeLibrarySymbols">
      <source xml:lang="en">Exclude symbols that come from library files in `Go to Symbol in Workspace` results. Requires using TypeScript 5.3+ in the workspace.</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.learnMoreAboutJs.title">
      <source xml:lang="en">Explore More</source>
    </trans-unit>
    <trans-unit id="typescript.findAllFileReferences">
      <source xml:lang="en">Find File References</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.title">
      <source xml:lang="en">Get started with JavaScript and Node.js</source>
    </trans-unit>
    <trans-unit id="javascript.goToProjectConfig.title">
      <source xml:lang="en">Go to Project Configuration (jsconfig / tsconfig)</source>
    </trans-unit>
    <trans-unit id="typescript.goToProjectConfig.title">
      <source xml:lang="en">Go to Project Configuration (tsconfig)</source>
    </trans-unit>
    <trans-unit id="typescript.goToSourceDefinition">
      <source xml:lang="en">Go to Source Definition</source>
    </trans-unit>
    <trans-unit id="virtualWorkspaces">
      <source xml:lang="en">In virtual workspaces, resolving and finding references across files is not supported.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.preferTypeOnlyAutoImports">
      <source xml:lang="en">Include the `type` keyword in auto-imports whenever possible. Requires using TypeScript 5.3+ in the workspace.</source>
    </trans-unit>
    <trans-unit id="format.indentSwitchCase">
      <source xml:lang="en">Indent case clauses in switch statements. Requires using TypeScript 5.1+ in the workspace.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.quoteStyle.auto">
      <source xml:lang="en">Infer quote type from existing code</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.jsxAttributeCompletionStyle.braces">
      <source xml:lang="en">Insert `={}` after attribute names.</source>
    </trans-unit>
    <trans-unit id="javascript.preferences.jsxAttributeCompletionStyle.auto">
      <source xml:lang="en">Insert `={}` or `=&quot;&quot;` after attribute names based on the prop type. See `#javascript.preferences.quoteStyle#` to control the type of quotes used for string attributes.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.jsxAttributeCompletionStyle.auto">
      <source xml:lang="en">Insert `={}` or `=&quot;&quot;` after attribute names based on the prop type. See `#typescript.preferences.quoteStyle#` to control the type of quotes used for string attributes.</source>
    </trans-unit>
    <trans-unit id="format.semicolons.insert">
      <source xml:lang="en">Insert semicolons at statement ends.</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.downloadNode.forLinux.title">
      <source xml:lang="en">Install Node.js</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title">
      <source xml:lang="en">Install Node.js</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.learnMoreAboutJs.altText">
      <source xml:lang="en">Learn more about JavaScript and Node.js in Visual Studio Code.</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.makeJsFile.description">
      <source xml:lang="en">Let&apos;s write our first JavaScript file. We&apos;ll have to create a new file and save it with the ``.js`` extension at the end of the file name.&#10;[Create a JavaScript File](command:javascript-walkthrough.commands.createJsFile)</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.caseFirst.lower">
      <source xml:lang="en">Lower-case comes before upper-case. E.g.` a, A, z, Z`.</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.description">
      <source xml:lang="en">Make the most of Visual Studio Code&apos;s first-class JavaScript experience.</source>
    </trans-unit>
    <trans-unit id="configuration.preferGoToSourceDefinition">
      <source xml:lang="en">Makes `Go to Definition` avoid type declaration files when possible by triggering `Go to Source Definition` instead. This allows `Go to Source Definition` to be triggered with the mouse gesture.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.typeOrder.inline">
      <source xml:lang="en">Named imports are sorted by name only. E.g. `import { type A, B, type Y, Z } from &apos;module&apos;;`</source>
    </trans-unit>
    <trans-unit id="typescript.updateImportsOnFileMove.enabled.never">
      <source xml:lang="en">Never rename paths and don&apos;t prompt.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.includePackageJsonAutoImports.off">
      <source xml:lang="en">Never search dependencies.</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description">
      <source xml:lang="en">Node.js is an easy way to run JavaScript code. You can use it to quickly build command-line apps and servers. It also comes with npm, a package manager which makes reusing and sharing JavaScript code easy.&#10;[Install Node.js](https://nodejs.org/en/download/)</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.downloadNode.forLinux.description">
      <source xml:lang="en">Node.js is an easy way to run JavaScript code. You can use it to quickly build command-line apps and servers. It also comes with npm, a package manager which makes reusing and sharing JavaScript code easy.&#10;[Install Node.js](https://nodejs.org/en/download/package-manager/)</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.debugJsFile.description">
      <source xml:lang="en">Once you&apos;ve installed Node.js, you can run JavaScript programs at a terminal by entering ``node your-file-name.js``&#10;Another easy way to run Node.js programs is by using VS Code&apos;s debugger which lets you run your code, pause at different points, and help you understand what&apos;s going on step-by-step.&#10;[Start Debugging](command:javascript-walkthrough.commands.debugJsFile)</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect.watch">
      <source xml:lang="en">Only create compile and watch tasks.</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect.build">
      <source xml:lang="en">Only create single run compile tasks.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.jsxAttributeCompletionStyle.none">
      <source xml:lang="en">Only insert attribute names.</source>
    </trans-unit>
    <trans-unit id="typescript.workspaceSymbols.scope.currentProject">
      <source xml:lang="en">Only search for symbols in the current JavaScript or TypeScript project.</source>
    </trans-unit>
    <trans-unit id="typescript.openTsServerLog.title">
      <source xml:lang="en">Open TS Server log</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useVsCodeWatcher.deprecation">
      <source xml:lang="en">Please use the `#typescript.tsserver.watchOptions#` setting instead.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling">
      <source xml:lang="en">Polls directories in chunks at regular interval.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling">
      <source xml:lang="en">Polls files in chunks at regular interval.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding">
      <source xml:lang="en">Preferred path ending for auto imports.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier">
      <source xml:lang="en">Preferred path style for auto imports.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.quoteStyle">
      <source xml:lang="en">Preferred quote style to use for Quick Fixes.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.jsxAttributeCompletionStyle">
      <source xml:lang="en">Preferred style for JSX attribute completions.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier.nonRelative">
      <source xml:lang="en">Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier.shortest">
      <source xml:lang="en">Prefers a non-relative import only if one is available that has fewer path segments than a relative import.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier.projectRelative">
      <source xml:lang="en">Prefers a non-relative import only if the relative import path would leave the package or project directory.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier.relative">
      <source xml:lang="en">Prefers a relative path to the imported file location.</source>
    </trans-unit>
    <trans-unit id="typescript.updateImportsOnFileMove.enabled.prompt">
      <source xml:lang="en">Prompt on each rename.</source>
    </trans-unit>
    <trans-unit id="description">
      <source xml:lang="en">Provides rich language support for JavaScript and TypeScript.</source>
    </trans-unit>
    <trans-unit id="reloadProjects.title">
      <source xml:lang="en">Reload Project</source>
    </trans-unit>
    <trans-unit id="typescript.removeUnusedImports">
      <source xml:lang="en">Remove Unused Imports</source>
    </trans-unit>
    <trans-unit id="format.semicolons.remove">
      <source xml:lang="en">Remove unnecessary semicolons.</source>
    </trans-unit>
    <trans-unit id="typescript.reportStyleChecksAsWarnings">
      <source xml:lang="en">Report style checks as warnings.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.caseFirst">
      <source xml:lang="en">Requires `organizeImports.unicodeCollation: &apos;unicode&apos;`, and `organizeImports.caseSensitivity` is not `caseInsensitive`. Indicates whether upper-case will sort before lower-case.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.accentCollation">
      <source xml:lang="en">Requires `organizeImports.unicodeCollation: &apos;unicode&apos;`. Compare characters with diacritical marks as unequal to base character.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.locale">
      <source xml:lang="en">Requires `organizeImports.unicodeCollation: &apos;unicode&apos;`. Overrides the locale used for collation. Specify `auto` to use the UI locale.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.numericCollation">
      <source xml:lang="en">Requires `organizeImports.unicodeCollation: &apos;unicode&apos;`. Sort numeric strings by integer value.</source>
    </trans-unit>
    <trans-unit id="typescript.restartTsServer">
      <source xml:lang="en">Restart TS Server</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.nodePath">
      <source xml:lang="en">Run TS Server on a custom Node installation. This can be a path to a Node executable, or &apos;node&apos; if you want VS Code to detect a Node installation.</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.debugJsFile.title">
      <source xml:lang="en">Run and Debug your JavaScript</source>
    </trans-unit>
    <trans-unit id="typescript.workspaceSymbols.scope.allOpenProjects">
      <source xml:lang="en">Search all open JavaScript or TypeScript projects for symbols.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.includePackageJsonAutoImports.auto">
      <source xml:lang="en">Search dependencies based on estimated performance impact.</source>
    </trans-unit>
    <trans-unit id="typescript.selectTypeScriptVersion.title">
      <source xml:lang="en">Select TypeScript Version...</source>
    </trans-unit>
    <trans-unit id="configuration.implicitProjectConfig.target">
      <source xml:lang="en">Set target JavaScript language version for emitted JavaScript and include library declarations. See more: https://www.typescriptlang.org/tsconfig#target.</source>
    </trans-unit>
    <trans-unit id="typescript.locale">
      <source xml:lang="en">Sets the locale used to report JavaScript and TypeScript errors. Defaults to use VS Code&apos;s locale.</source>
    </trans-unit>
    <trans-unit id="configuration.implicitProjectConfig.module">
      <source xml:lang="en">Sets the module system for the program. See more: https://www.typescriptlang.org/tsconfig#module.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.index">
      <source xml:lang="en">Shorten `./component/index.js` to `./component/index`.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.minimal">
      <source xml:lang="en">Shorten `./component/index.js` to `./component`.</source>
    </trans-unit>
    <trans-unit id="typescript.sortImports">
      <source xml:lang="en">Sort Imports</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.caseSensitivity.insensitive">
      <source xml:lang="en">Sort imports case-insensitively.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.caseSensitivity.sensitive">
      <source xml:lang="en">Sort imports case-sensitively.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.unicodeCollation.unicode">
      <source xml:lang="en">Sort imports using the Unicode code collation.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.unicodeCollation.ordinal">
      <source xml:lang="en">Sort imports using the numeric value of each code point.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useSyntaxServer.auto">
      <source xml:lang="en">Spawn both a full server and a lighter weight server dedicated to syntax operations. The syntax server is used to speed up syntax operations and provide IntelliSense while projects are loading.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.caseSensitivity">
      <source xml:lang="en">Specifies how imports should be sorted with regards to case-sensitivity. If `auto` or unspecified, we will detect the case-sensitivity per file</source>
    </trans-unit>
    <trans-unit id="typescript.tsdk.desc">
      <source xml:lang="en">Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.&#10;&#10;- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.&#10;- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.&#10;&#10;See the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.</source>
    </trans-unit>
    <trans-unit id="typescript.npm">
      <source xml:lang="en">Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.autoImportFileExcludePatterns">
      <source xml:lang="en">Specify glob patterns of files to exclude from auto imports. Relative paths are resolved relative to the workspace root. Patterns are evaluated using tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude) semantics.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.typeOrder">
      <source xml:lang="en">Specify how type-only named imports should be sorted.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.autoImportSpecifierExcludeRegexes">
      <source xml:lang="en">Specify regular expressions to exclude auto imports with matching import specifiers. Examples:&#10;&#10;- `^node:`&#10;- `lib/internal` (slashes don&apos;t need to be escaped...)&#10;- `/lib\/internal/i` (...unless including surrounding slashes for `i` or `u` flags)&#10;- `^lodash$` (only allow subpath imports from lodash)</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.unicodeCollation">
      <source xml:lang="en">Specify whether to sort imports using Unicode or Ordinal collation.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory">
      <source xml:lang="en">Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile">
      <source xml:lang="en">Strategy for how individual files are watched.</source>
    </trans-unit>
    <trans-unit id="configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName">
      <source xml:lang="en">Suppress parameter name hints on arguments whose text is identical to the parameter name.</source>
    </trans-unit>
    <trans-unit id="configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName">
      <source xml:lang="en">Suppress type hints on variables whose name is identical to the type name.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.web.projectWideIntellisense.suppressSemanticErrors">
      <source xml:lang="en">Suppresses semantic errors on web even when project wide IntelliSense is enabled. This is always on when project wide IntelliSense is not enabled or available. See `#typescript.tsserver.web.projectWideIntellisense.enabled#`</source>
    </trans-unit>
    <trans-unit id="workspaceTrust">
      <source xml:lang="en">The extension requires workspace trust when the workspace version is used because it executes code specified by the workspace.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.maxTsServerMemory">
      <source xml:lang="en">The maximum amount of memory (in MB) to allocate to the TypeScript server process. To use a memory limit greater than 4 GB, use `#typescript.tsserver.nodePath#` to run TS Server with a custom Node installation.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.renameShorthandProperties.deprecationMessage">
      <source xml:lang="en">The setting &apos;typescript.preferences.renameShorthandProperties&apos; has been deprecated in favor of &apos;typescript.preferences.useAliasesForRenames&apos;</source>
    </trans-unit>
    <trans-unit id="taskDefinition.tsconfig.description">
      <source xml:lang="en">The tsconfig file that defines the TS build.</source>
    </trans-unit>
    <trans-unit id="configuration.javascript.checkJs.checkJs.deprecation">
      <source xml:lang="en">This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`.</source>
    </trans-unit>
    <trans-unit id="configuration.javascript.checkJs.experimentalDecorators.deprecation">
      <source xml:lang="en">This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useSeparateSyntaxServer.deprecation">
      <source xml:lang="en">This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.typeOrder.first">
      <source xml:lang="en">Type only named imports are sorted to the beginning of the import list. E.g. `import { type A, type Y, B, Z } from &apos;module&apos;;`</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.typeOrder.last">
      <source xml:lang="en">Type only named imports are sorted to the end of the import list. E.g. `import { B, Z, type A, type Y } from &apos;module&apos;;`</source>
    </trans-unit>
    <trans-unit id="configuration.typescript">
      <source xml:lang="en">TypeScript</source>
    </trans-unit>
    <trans-unit id="displayName">
      <source xml:lang="en">TypeScript and JavaScript Language Features</source>
    </trans-unit>
    <trans-unit id="typescript.problemMatchers.tsc.label">
      <source xml:lang="en">TypeScript problems</source>
    </trans-unit>
    <trans-unit id="typescript.problemMatchers.tscWatch.label">
      <source xml:lang="en">TypeScript problems (watch mode)</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.organizeImports.caseFirst.upper">
      <source xml:lang="en">Upper-case comes before lower-case. E.g. ` A, a, B, b`.</source>
    </trans-unit>
    <trans-unit id="typescript.locale.auto">
      <source xml:lang="en">Use VS Code&apos;s configured display language.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.vscode">
      <source xml:lang="en">Use VS Code&apos;s file watchers instead of TypeScript&apos;s. Requires using TypeScript 5.4+ in the workspace.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useVsCodeWatcher">
      <source xml:lang="en">Use VS Code&apos;s file watchers instead of TypeScript&apos;s. Requires using TypeScript 5.4+ in the workspace.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling">
      <source xml:lang="en">Use a dynamic queue where less-frequently modified directories will be checked less often.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ">
      <source xml:lang="en">Use a dynamic queue where less-frequently modified files will be checked less often.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling">
      <source xml:lang="en">Use a dynamic queue where less-frequently modified files will be checked less often.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useSyntaxServer.always">
      <source xml:lang="en">Use a lighter weight syntax server to handle all IntelliSense operations. This syntax server can only provide IntelliSense for opened files.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.auto">
      <source xml:lang="en">Use project settings to select a default.</source>
    </trans-unit>
    <trans-unit id="walkthroughs.nodejsWelcome.learnMoreAboutJs.description">
      <source xml:lang="en">Want to get more comfortable with JavaScript, Node.js, and VS Code? Be sure to check out our docs!&#10;We&apos;ve got lots of resources for learning [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) and [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).&#10;&#10;[Learn More](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.renameMatchingJsxTags">
      <source xml:lang="en">When on a JSX tag, try to rename the matching tag instead of renaming the symbol. Requires using TypeScript 5.1+ in the workspace.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling">
      <source xml:lang="en">When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn&apos;t support native file watchers.</source>
    </trans-unit>
  </body></file>
</xliff>